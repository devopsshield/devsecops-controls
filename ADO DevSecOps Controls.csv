Category,Initiative Name,Initiative Description,Severity,Control ID,DevOps Control Name,Control Description,Recommendation,Code
Organization,ADO Secure Organization Pipelines,Secure organization pipelines by managing the general pipeline settings and agent pools.,Critical,DOS1075,Pipeline Settings - Disable building pull requests from forked repositories,"Limit building pull requests from forked GitHub repositories. Disable building pull requests from forked repositories. With this enabled, No pipeline will build pull requests from forked repositories. Learn more: https://learn.microsoft.com/en-us/azure/devops/pipelines/repos/github#contributions-from-forks","1. Navigate to Organization Settings.  2. Open the Settings link under Pipelines.  3. Under the 'Triggers' section, turn 'On' the setting 'Limit building pull requests from forked GitHub repositories'.  4. Turn 'On' the setting 'Disable building pull requests from forked repositories'.",ADO_ORGANIZATION_PIPELINE_SETTINGS_DISABLE_BUILDING_PULL_REQUESTS_FROM_FORKED_REPOSITORIES
Organization,ADO Secure Organization Pipelines,Secure organization pipelines by managing the general pipeline settings and agent pools.,Critical,DOS1130,Pipeline Settings - Enforce access to repositories in YAML pipelines.,"Protect access to repositories in YAML pipelines. Restricts the scope of access for all pipelines to only repositories explicitly referenced by the pipeline. Apply checks and approvals when accessing repositories from YAML pipelines. Also, generate a job access token that is scoped to repositories that are explicitly referenced in the YAML pipeline. Learn more: https://learn.microsoft.com/en-us/azure/devops/pipelines/security/secure-access-to-repos https://learn.microsoft.com/en-us/azure/devops/pipelines/process/access-tokens#protect-access-to-repositories-in-yaml-pipelines https://devblogs.microsoft.com/devops/pipeline-stealing-another-repo/",1. Go to Organization Settings.  2. Click on Pipelines -> Settings.  3. Turn 'On' the setting 'Protect access to repositories in YAML pipelines'.,ADO_ORGANIZATION_PIPELINE_SETTINGS_LIMIT_PIPELINE_SCOPE_TO_REFERENCED_REPOS
Organization,ADO Secure Organization Pipelines,Secure organization pipelines by managing the general pipeline settings and agent pools.,Critical,DOS1120,Pipeline Settings - Enforce job authorization scope to current project for non-release pipelines,"Limit job authorization scope to current project for non-release pipelines. If enabled, scope of access for all pipelines reduces to the current project. Non-Release Pipelines can run with collection scoped access tokens unless this option is enabled. With this option enabled, you can reduce the scope of access for all non-release pipelines to the current project. Learn more: https://learn.microsoft.com/en-us/azure/devops/pipelines/security/secure-access-to-repos https://learn.microsoft.com/en-us/azure/devops/pipelines/process/access-tokens#job-authorization-scope",1. Go to Organization Settings.  2. Click on Pipelines -> Settings.  3. Turn 'On' the setting 'Limit job authorization scope to current project for non-release pipelines'.,ADO_ORGANIZATION_PIPELINE_SETTINGS_LIMIT_NON_RELEASE_PIPELINE_SCOPE
Organization,ADO Secure Organization Pipelines,Secure organization pipelines by managing the general pipeline settings and agent pools.,Critical,DOS1140,Pipeline Settings - Enforce job authorization scope to current project for release pipelines,"Limit job authorization scope to current project for release pipelines. Release pipelines can run with collection scoped access tokens unless this option is enabled. With this option enabled, you can reduce the scope of access for all release pipelines to the current project. Learn more: https://learn.microsoft.com/en-us/azure/devops/pipelines/security/secure-access-to-repos https://learn.microsoft.com/en-us/azure/devops/pipelines/process/access-tokens#job-authorization-scope",1. Go to Organization Settings.  2. Click on Pipelines -> Settings.  3. Turn 'On' the setting 'Limit job authorization scope to current project for release pipelines'.,ADO_ORGANIZATION_PIPELINE_SETTINGS_LIMIT_RELEASE_PIPELINE_SCOPE
Organization,ADO Secure Organization Pipelines,Secure organization pipelines by managing the general pipeline settings and agent pools.,High,DOS1050,Disable auto-provisioning of agent pools,Do not enable auto-provisioning of the agent pool in new projects. Enabling the auto-provisioning will import automatically the agent pool for all new projects. Learn more: https://learn.microsoft.com/en-us/azure/devops/pipelines/agents/pools-queues,1. Go to Organization Settings.  2. Click on Pipelines -> Agent pools.  3. Select an agent pool.  4. Select the Settings tab.  5. Turn 'Off' the setting 'Auto-provision this agent pool in new projects'.,ADO_ORGANIZATION_PIPELINE_AGENTPOOL_DONT_ENABLE_AUTOPROVISIONING
Organization,ADO Secure Organization Pipelines,Secure organization pipelines by managing the general pipeline settings and agent pools.,High,DOS1060,Enable auto-update of agents in the agent pool,Agent update settings - Allow agents in the agent pool to automatically update. Learn more: https://learn.microsoft.com/en-us/azure/devops/pipelines/agents/pools-queues,1. Go to Organization Settings.  2. Click on Pipelines -> Agent pools.  3. Select an agent pool.  4. Select the Settings tab.  5. Turn 'On' the setting 'Allow agents in this pool to automatically update'.,ADO_ORGANIZATION_PIPELINE_AGENTPOOL_ENABLE_AUTO_UPDATE
Organization,ADO Secure Organization Pipelines,Secure organization pipelines by managing the general pipeline settings and agent pools.,High,DOS1115,Pipeline Settings - Enable shell tasks arguments validation,"Enable shell tasks args sanitizing. When this is enabled, argument parameters for built-in shell tasks are validated to prevent additional shell commands from being executed. Learn more: https://learn.microsoft.com/en-us/azure/devops/pipelines/security/inputs#shellTasksValidation",1. Navigate to Organization Settings.  2. Open the Settings link under Pipelines.  3. Turn 'On' the setting 'Enable shell tasks arguments validation'.,ADO_ORGANIZATION_PIPELINE_SETTINGS_ENABLE_SHELL_TASKS_ARGUMENTS_VALIDATION
Organization,ADO Secure Organization Pipelines,Secure organization pipelines by managing the general pipeline settings and agent pools.,High,DOS1150,Pipeline Settings - Limit variables that can be set at queue time,"Enforce settable variables. If enabled, only those variables that are explicitly marked as 'Settable at queue time' can be set at queue time. You can set any variables at queue time unless this option is enabled. With this option enabled, only those variables that are explicitly marked as 'Settable at queue time' can be set. Learn more: https://learn.microsoft.com/en-us/azure/devops/pipelines/security/inputs https://learn.microsoft.com/en-us/azure/devops/organizations/security/security-best-practices",1. Go to Organization Settings.  2. Click on Pipelines -> Settings.  3. Turn 'On' the setting 'Limit variables that can be set at queue time'.,ADO_ORGANIZATION_PIPELINE_SETTINGS_LIMIT_SETTABLE_VARIABLES_AT_QUEUE_TIME
Organization,ADO Secure Organization Pipelines,Secure organization pipelines by managing the general pipeline settings and agent pools.,Medium,DOS1080,Pipeline Settings - Disable creation of classic build pipelines,"Enable the setting 'Disable creation of classic build pipelines'. When this is enabled, no classic build pipelines can be created / imported. Existing ones will continue to work. Learn more: https://devblogs.microsoft.com/devops/disable-creation-of-classic-pipelines ",1. Go to Organization Settings.  2. Click on Pipelines -> Settings.  3. Turn 'On' the setting 'Disable creation of classic build pipelines'.,ADO_ORGANIZATION_PIPELINE_SETTINGS_DISABLE_CREATION_OF_CLASSIC_BUILD_PIPELINES
Organization,ADO Secure Organization Pipelines,Secure organization pipelines by managing the general pipeline settings and agent pools.,Medium,DOS1090,Pipeline Settings - Disable creation of classic release pipelines,"Enable the setting 'Disable creation of classic release pipelines'. When this is enabled, no classic release pipelines, task groups, and deployment groups can be created / imported. Existing ones will continue to work. Learn more: https://devblogs.microsoft.com/devops/disable-creation-of-classic-pipelines ",1. Go to Organization Settings.  2. Click on Pipelines -> Settings.  3. Turn 'On' the setting 'Disable creation of classic release pipelines'.,ADO_ORGANIZATION_PIPELINE_SETTINGS_DISABLE_CREATION_OF_CLASSIC_RELEASE_PIPELINES
Organization,ADO Secure Organization Pipelines,Secure organization pipelines by managing the general pipeline settings and agent pools.,Low,DOS1070,Pipeline Settings - Disable anonymous access to badges,Status badges are private. Anonymous users can access the status badge API for all pipelines unless this option is enabled. Learn more: https://learn.microsoft.com/en-us/azure/devops/pipelines/create-first-pipeline?#add-a-status-badge-to-your-repository,1. Go to Organization Settings.  2. Click on Pipelines -> Settings.  3. Turn 'On' the setting 'Disable anonymous access to badges'.,ADO_ORGANIZATION_PIPELINE_SETTINGS_DISABLE_ANONYMOUS_ACCESS_TO_BADGES
Organization,ADO Secure Organization Pipelines,Secure organization pipelines by managing the general pipeline settings and agent pools.,Low,DOS1100,Pipeline Settings - Disable implied YAML CI trigger to prevent unintended pipeline runs,Prevent unintended pipeline runs. Enable the setting 'Disable implied YAML CI trigger'. Trigger a pipeline only for code changes that match its trigger section. Do not trigger the pipeline if the trigger section is missing. Learn more: https://learn.microsoft.com/en-us/azure/devops/release-notes/2023/sprint-227-update#prevent-unintended-pipeline-runs https://learn.microsoft.com/en-us/azure/devops/pipelines/yaml-schema/trigger,1. Go to Organization Settings.  2. Click on Pipelines -> Settings.  3. Turn 'On' the setting 'Disable implied YAML CI trigger'.,ADO_ORGANIZATION_PIPELINE_SETTINGS_DISABLE_IMPLIED_YAML_CI_TRIGGER
Organization,ADO Secure Organization Pipelines,Secure organization pipelines by managing the general pipeline settings and agent pools.,Low,DOS1110,Pipeline Settings - Disable stage chooser,"Enable the setting 'Disable stage chooser'. With this enabled, users will not be able to select stages to skip from the Queue Pipeline panel. Learn more: https://learn.microsoft.com/en-us/azure/devops/pipelines/process/stages",1. Go to Organization Settings.  2. Click on Pipelines -> Settings.  3. Turn 'On' the setting 'Disable stage chooser'.,ADO_ORGANIZATION_PIPELINE_SETTINGS_DISABLE_STAGE_CHOOSER
Organization,ADO Secure Organizations - General,Secure your organization by applying standards and best practices.,High,DOS1010,Artifacts - Restrict feeds creation to only administrators,Allow only administrators to create feeds in your organization. Learn more: https://learn.microsoft.com/en-us/azure/devops/artifacts/feeds/feed-permissions,1. Go to Artifacts.  2. Click on Azure Artifacts Settings button.  3. Review 'Who can create feeds' and select 'Only administrators and these users can create feeds'. Grant this permission to a limited set of users/groups.,ADO_ORGANIZATION_ARTIFACTS_SETTINGS_RESTRICT_WHO_CAN_CREATE_FEEDS
Organization,ADO Secure Organizations - General,Secure your organization by applying standards and best practices.,High,DOS1300,Enable Advanced Security for new Projects,Automatically enable Advanced Security for new projects. New projects in this organization will be set to automatically enable Advanced Security on new Git repositories by default. Settings can be changed on individual projects and repositories at any time. Advanced Security is billed based on the number of unique active committers across all enabled repositories in your subscription. Learn more: https://learn.microsoft.com/en-us/azure/devops/repos/security/configure-github-advanced-security-features,1. Go to Organization Settings.  2. Select Repos -> Repositories.  3. Turn 'On' the setting 'Automatically enable Advanced Security for new projects'.,ADO_ORGANIZATION_ADVANCEDSECURITY_ENABLE_FOR_NEW_PROJECTS
Organization,ADO Secure Organizations - General,Secure your organization by applying standards and best practices.,High,DOS1020,Extensions - Restrict extensions to only trusted publishers,Allow extensions only from trusted publishers to be installed in your organization. Running extensions from untrusted source can lead to all type of attacks and data loss. Learn more: https://learn.microsoft.com/en-us/azure/devops/extend/overview,1. Go to Organization Settings.  2. Select Extensions.  3. Review all installed extensions in the organization.,ADO_ORGANIZATION_EXTENSIONS_RESTRICT_TO_TRUSTED_PUBLISHERS
Organization,ADO Secure Organizations - General,Secure your organization by applying standards and best practices.,High,DOS1030,Extensions - Security Roles - Restrict extension manager role to only administrators,Allow only administrators to manage extensions in your organization. Review the users who have permission to manage extensions. Users with extension manager role can install/uninstall extensions and approve/decline extension requests. Learn more: https://learn.microsoft.com/en-us/azure/devops/marketplace/grant-permissions,1. Go to Organization Settings.  2. Select Extensions.  3. Click on the Security button.  4. Review all 'Manager' role assignments.,ADO_ORGANIZATION_EXTENSIONS_SECURITYROLES_RESTRICT_EXTENSION_MANAGER_ROLE_TO_ADMINS
Organization,ADO Secure Organizations - General,Secure your organization by applying standards and best practices.,High,DOS1250,Users - Remove access for inactive guest users,Review inactive guest users and revoke their access. Inactive guest users must be removed to reduce the attack surface. Ensure only legitimate users have access to your organization resources. Go to Organization Settings -> Users. Learn more: https://learn.microsoft.com/en-us/azure/devops/organizations/security/security-best-practices?view=azure-devops#removing-users,"1. Go to Organization Settings.  2. Select Users.  3. Under 'All users' tab, filter by 'AAD User Type' as 'Guest User'.  4. Review the 'Last Accessed' column, then revoke access for inactive users.",ADO_ORGANIZATION_USERS_REMOVE_INACTIVE_GUEST_USERS
Organization,ADO Secure Organizations - General,Secure your organization by applying standards and best practices.,Medium,DOS1040,An organization must have at least 2 and no more than 5 administrators,"Your organization should have at least 2 and at most 5 Project Collection Administrators. To reduce the risk of losing admin access, you may want to ensure at least 2 users are part of the Project Collection Administrators group. Limit the number of administrators to no more than 5 for your organization. Learn more: https://learn.microsoft.com/en-us/azure/devops/organizations/security/look-up-project-collection-administrators",1. Go to Organization Settings.  2. Click on Security -> Permissions.  3. Groups - Select ' Project Collection Administrators'.  4. Review all members of this group.,ADO_ORGANIZATION_LIMIT_MIN_MAX_ADMINS
Organization,ADO Secure Organizations - General,Secure your organization by applying standards and best practices.,Medium,DOS1260,Users - Revoke access for inactive users,Review inactive users and revoke their access. Inactive users must be removed to reduce the attack surface. Ensure only legitimate users have access to your organization resources. Go to Organization Settings -> Users. Learn more: https://learn.microsoft.com/en-us/azure/devops/organizations/security/security-best-practices?view=azure-devops#removing-users,"1. Go to Organization Settings.  2. Select Users.  3. Under 'All users' tab, review and filter the 'Last Accessed' column, then revoke access for inactive users.",ADO_ORGANIZATION_USERS_REVIEW_AND_REVOKE_ACCESS_FOR_INACTIVE_USERS
Organization,ADO Secure Organizations Security Policies,Secure organizations by managing the security policies.,Critical,DOS1180,Disallow Anonymous Access,Allow public projects should be disabled. Learn more: https://learn.microsoft.com/en-us/azure/devops/organizations/projects/create-project https://learn.microsoft.com/en-us/azure/devops/organizations/security/security-best-practices?view=azure-devops#project-level-permissions,1. Go to Organization Settings.  2. Click on Security -> Policies.  3. Security policies.  4. Turn 'Off' the setting 'Allow public projects'.,ADO_ORGANIZATION_POLICIES_SECURITY_DONT_ALLOW_PUBLIC_PROJECTS
Organization,ADO Secure Organizations Security Policies,Secure organizations by managing the security policies.,Critical,DOS1220,Disallow Guest Users,External guest access should be disabled. Learn more: https://learn.microsoft.com/en-us/azure/devops/organizations/security/security-best-practices?view=azure-devops#external-guest-access https://learn.microsoft.com/en-us/azure/devops/organizations/accounts/add-external-user,1. Go to Organization Settings.  2. Click on Security -> Policies.  3. User policies.  4. Turn 'Off' the setting 'External guest access'.,ADO_ORGANIZATION_POLICIES_USER_DISABLE_GUEST_USERS
Organization,ADO Secure Organizations Security Policies,Secure organizations by managing the security policies.,Critical,DOS1210,Enable Additional protections when using public package registries,Additional protections when using public package registries. Learn more: https://devblogs.microsoft.com/devops/changes-to-azure-artifact-upstream-behavior https://learn.microsoft.com/en-us/azure/devops/artifacts/concepts/upstream-sources,1. Go to Organization Settings.  2. Click on Security -> Policies.  3. Security policies.  4. Turn 'On' the setting 'Additional protections when using public package registries'.,ADO_ORGANIZATION_POLICIES_SECURITY_ENABLE_PROTECTIONS_WHEN_USING_PUBLIC_PACKAGES
Organization,ADO Secure Organizations Security Policies,Secure organizations by managing the security policies.,High,DOS1160,Disallow OAuth Authentication,Third-party application access via OAuth should be disabled. Learn more: https://learn.microsoft.com/en-us/azure/devops/organizations/accounts/change-application-access-policies,1. Go to Organization Settings.  2. Click on Security -> Policies.  3. Application connection policies.  4. Turn 'Off' the setting 'Third-party application access via OAuth'.,ADO_ORGANIZATION_POLICIES_APPCONNECTION_DISABLE_OAUTH_APP_ACCESS
Organization,ADO Secure Organizations Security Policies,Secure organizations by managing the security policies.,High,DOS1230,Disallow Request Access Token,Request access should be disabled. Learn more: https://learn.microsoft.com/en-us/azure/devops/organizations/accounts/disable-request-access-policy,1. Go to Organization Settings.  2. Click on Security -> Policies.  3. User policies.  4. Turn 'Off' the setting 'Request access'.,ADO_ORGANIZATION_POLICIES_USER_DISABLE_REQUEST_ACCESSTOKEN
Organization,ADO Secure Organizations Security Policies,Secure organizations by managing the security policies.,High,DOS1170,Disallow SSH authentication,SSH authentication should be disabled. Learn more: https://learn.microsoft.com/en-us/azure/devops/repos/git/use-ssh-keys-to-authenticate?view=azure-devops,1. Go to Organization Settings.  2. Click on Security -> Policies.  3. Application connection policies.  4. Turn 'Off' the setting 'SSH authentication'.,ADO_ORGANIZATION_POLICIES_APPCONNECTION_DISABLE_SSH_ACCESS
Organization,ADO Secure Organizations Security Policies,Secure organizations by managing the security policies.,High,DOS1240,Disallow team and project administrators to invite new users,Disallow team and project administrators to invite new users. Learn more: https://learn.microsoft.com/en-us/azure/devops/organizations/security/restrict-invitations,1. Go to Organization Settings.  2. Click on Security -> Policies.  3. User policies.  4. Turn 'Off' the setting 'Allow team and project administrators to invite new users'.,ADO_ORGANIZATION_POLICIES_USER_DISABLE_TEAM_ADMINS_INVITATIONS
Organization,ADO Secure Organizations Security Policies,Secure organizations by managing the security policies.,High,DOS1200,Enable Log Audit Events,Log Audit Events. Learn more: https://learn.microsoft.com/en-us/azure/devops/organizations/security/security-best-practices?view=azure-devops#review-auditing-events https://learn.microsoft.com/en-us/azure/devops/organizations/audit/azure-devops-auditing,1. Go to Organization Settings.  2. Click on Security -> Policies.  3. Security policies.  4. Turn 'On' the setting 'Log Audit Events'.  5. Make sure you configure at least one stream under General -> Auditing -> Streams.,ADO_ORGANIZATION_POLICIES_SECURITY_ENABLE_LOG_AUDIT_EVENTS
Organization,ADO Secure Organizations Security Policies,Secure organizations by managing the security policies.,High,DOS1190,Enforce AAD Conditional Access,Enable Azure Active Directory Conditional Access Policy Validation. Learn more: https://learn.microsoft.com/en-us/azure/devops/organizations/accounts/change-application-access-policies,1. Go to Organization Settings.  2. Click on Security -> Policies.  3. Security policies.  4. Turn 'On' the setting 'Enable Azure Active Directory Conditional Access Policy Validation'.,ADO_ORGANIZATION_POLICIES_SECURITY_ENABLE_AAD_CONDITIONAL_ACCESS
Project,ADO Secure Projects - General,Secure your projects by ensuring private visibility and validating the settings.,Critical,DOS2120,All Repositories - Security Permissions - Do not allow bypassing policies,Protect important branches across all repositories in this project. This policy will ensure that no user has permissions to bypass policies. Learn more: https://learn.microsoft.com/en-us/azure/devops/organizations/security/security-best-practices?view=azure-devops#secure-azure-repos https://learn.microsoft.com/en-us/azure/devops/repos/git/branch-permissions,"1. Navigate to Project Settings.  2. Open the Repositories link under Repos.  3. Under 'All Repositories' page, click on Security tab.  4. On the page 'User permissions', ensure the 'Bypass policies when completing pull requests' and 'Bypass policies when pushing' user permisions are 'Not set' or 'Deny'.",ADO_PROJECT_ALLREPOSITORIES_SECURITYPERMISSIONS_DONT_ALLOW_BYPASS_POLICIES
Project,ADO Secure Projects - General,Secure your projects by ensuring private visibility and validating the settings.,Critical,DOS2330,Ensure project visibility is set to Private,Ensure project visibility is always private. Private projects require users to be granted access to the project and signed in to access the services. Learn more: https://docs.microsoft.com/en-us/azure/devops/organizations/public/make-project-public,"1. Go to Project Overview -> Summary.  2. On top right, make sure the project is labeled 'Private'.",ADO_PROJECT_PRIVATE_VISIBILITY
Project,ADO Secure Projects - General,Secure your projects by ensuring private visibility and validating the settings.,High,DOS2010,All Repositories - Branch Policies - Automatically include code reviewers,"Protect important branches across all repositories in this project. Enable the 'Automatically included reviewers' branch policy, so that you can automatically add reviewers to pull requests that change files in specific directories and files, or to all pull requests in a repo. This policy will ensure that required reviewers are added for modified files matching specified patterns. Designate code reviewers to automatically include when pull requests change certain areas of code. Learn more: https://learn.microsoft.com/en-us/azure/devops/repos/git/branch-policies#automatically-include-code-reviewers https://learn.microsoft.com/en-us/azure/devops/organizations/security/security-best-practices#repositories-and-branches","1. Navigate to Project Settings.  2. Open the Repositories link under Repos.  3. Under 'All Repositories' page, click on Policies tab.  4. Under 'Branch Policies' section, click on a branch from the list or click '+' to add a branch protection across all repositories.  5. On the page 'Cross-Repository policies for' selected branch, under 'Automatically included reviewers' section, click on '+' button to add a new reviewer policy.  6. Ensure at least one policy is enabled.",ADO_PROJECT_ALLREPOSITORIES_BRANCHPOLICY_AUTOMATICALLY_INCLUDE_CODE_REVIEWERS
Project,ADO Secure Projects - General,Secure your projects by ensuring private visibility and validating the settings.,High,DOS2020,All Repositories - Branch Policies - Check for comment resolution,"Protect important branches across all repositories in this project. Enable the 'Check for comment resolution' branch policy, so that you require all PR comments to be resolved when pull requests are completed. This policy checks to see that all comments have been resolved on pull requests. Block pull requests from being completed while any comments are active. Learn more: https://learn.microsoft.com/en-us/azure/devops/repos/git/branch-policies#check-for-comment-resolution https://learn.microsoft.com/en-us/azure/devops/organizations/security/security-best-practices#repositories-and-branches","1. Navigate to Project Settings.  2. Open the Repositories link under Repos.  3. Under 'All Repositories' page, click on Policies tab.  4. Under 'Branch Policies' section, click on a branch from the list or click '+' to add a branch protection across all repositories.  5. On the page 'Cross-Repository policies for' selected branch, under 'Branch Policies' section, turn 'On' the policy 'Check for comment resolution'.  6. Configure the policy to be 'Required'.",ADO_PROJECT_ALLREPOSITORIES_BRANCHPOLICY_CHECK_FOR_COMMENT_RESOLUTION
Project,ADO Secure Projects - General,Secure your projects by ensuring private visibility and validating the settings.,High,DOS2030,All Repositories - Branch Policies - Check for linked work items,"Protect important branches across all repositories in this project. Enable the 'Check for linked work items' branch policy, so that you require associations between PRs and work items when pull requests are completed. This policy will ensure work item management tracking by requiring associations between PRs and work items. Block pull requests from being completed unless they have at least one linked work item. Learn more: https://learn.microsoft.com/en-us/azure/devops/repos/git/branch-policies#check-for-linked-work-items https://learn.microsoft.com/en-us/azure/devops/organizations/security/security-best-practices#repositories-and-branches","1. Navigate to Project Settings.  2. Open the Repositories link under Repos.  3. Under 'All Repositories' page, click on Policies tab.  4. Under 'Branch Policies' section, click on a branch from the list or click '+' to add a branch protection across all repositories.  5. On the page 'Cross-Repository policies for' selected branch, under 'Branch Policies' section, turn 'On' the policy 'Check for linked work items'.  6. Configure the policy to be 'Required'.",ADO_PROJECT_ALLREPOSITORIES_BRANCHPOLICY_CHECK_FOR_LINKED_WORK_ITEMS
Project,ADO Secure Projects - General,Secure your projects by ensuring private visibility and validating the settings.,High,DOS2040,All Repositories - Branch Policies - Limit merge types,"Protect important branches across all repositories in this project. Enable the 'Limit merge types' branch policy, so that you control the branch history by limiting the available types of merge when pull requests are completed. This policy will ensure consistent branch history by enforcing a merge strategy for pull request completion. Defaults to 'Basic merge (no fast-forward)' - Preserves history exactly as it happened during development. Learn more: https://learn.microsoft.com/en-us/azure/devops/repos/git/branch-policies#limit-merge-types https://learn.microsoft.com/en-us/azure/devops/organizations/security/security-best-practices#repositories-and-branches","1. Navigate to Project Settings.  2. Open the Repositories link under Repos.  3. Under 'All Repositories' page, click on Policies tab.  4. Under 'Branch Policies' section, click on a branch from the list or click '+' to add a branch protection across all repositories.  5. On the page 'Cross-Repository policies for' selected branch, under 'Branch Policies' section, turn 'On' the policy 'Limit merge types'.  6. Configure the policy to match your standards and update the policy definition.",ADO_PROJECT_ALLREPOSITORIES_BRANCHPOLICY_LIMIT_MERGE_TYPES
Project,ADO Secure Projects - General,Secure your projects by ensuring private visibility and validating the settings.,High,DOS2060,All Repositories - Branch Policies - Require a minimum number of reviewers,"Protect important branches across all repositories in this project. Enable the 'Require a minimum number of reviewers' branch policy, so that every pull request gets reviewed by at least two approvers. This policy will ensure that a minimum number of reviewers have approved a pull request before completion. Learn more: https://learn.microsoft.com/en-us/azure/devops/organizations/security/security-best-practices?view=azure-devops#repositories-and-branches https://learn.microsoft.com/en-us/azure/devops/repos/git/branch-policies#require_reviewers https://learn.microsoft.com/en-us/azure/devops/organizations/security/security-best-practices#repositories-and-branches","1. Navigate to Project Settings.  2. Open the Repositories link under Repos.  3. Under 'All Repositories' page, click on Policies tab.  4. Under 'Branch Policies' section, click on a branch from the list or click '+' to add a branch protection across all repositories.  5. On the page 'Cross-Repository policies for' selected branch, under 'Branch Policies' section, turn 'On' the policy 'Require a minimum number of reviewers'.  6. Configure the policy to match your standards and the current policy definition: Minimum number of reviewers: 2, Prohibit the most recent pusher from approving their own changes: ON, When new changes are pushed: ON (Require at least one approval on the last iteration).",ADO_PROJECT_ALLREPOSITORIES_BRANCHPOLICY_REQUIRE_MIN_REVIEWERS
Project,ADO Secure Projects - General,Secure your projects by ensuring private visibility and validating the settings.,High,DOS2050,All Repositories - Branch Policies - Require Build Validation,"Protect important branches across all repositories in this project. Enable the 'Build Validation' branch policy, so that you require pull request changes to build successfully before the PR can complete. The build policy evaluates the build results to determine whether the PR can be completed. Build must succeed in order to complete pull requests. Learn more: https://learn.microsoft.com/en-us/azure/devops/repos/git/branch-policies#build-validation https://learn.microsoft.com/en-us/azure/devops/organizations/security/security-best-practices#repositories-and-branches","1. Navigate to Project Settings.  2. Open the Repositories link under Repos.  3. Under 'All Repositories' page, click on Policies tab.  4. Under 'Branch Policies' section, click on a branch from the list or click '+' to add a branch protection across all repositories.  5. On the page 'Cross-Repository policies for' selected branch, under 'Build Validation' section, click on '+' button to add a new build policy.  6. Ensure at least one policy is enabled.",ADO_PROJECT_ALLREPOSITORIES_BRANCHPOLICY_REQUIRE_BUILD_VALIDATION
Project,ADO Secure Projects - General,Secure your projects by ensuring private visibility and validating the settings.,High,DOS2080,All Repositories - Repository Policies - Commit author email validation,"Enable the 'Commit author email validation' branch policy, so that you block commits to a repository by commit authors whose email addresses don't match a pattern. This policy will block pushes from including commits where the author email does not match the specified patterns. Learn more: https://learn.microsoft.com/en-us/azure/devops/repos/git/repository-settings?#commit-author-email-validation-policy https://learn.microsoft.com/en-us/azure/devops/organizations/security/security-best-practices#repositories-and-branches","1. Navigate to Project Settings.  2. Open the Repositories link under Repos.  3. Under 'All Repositories' page, click on Policies tab.  4. Under 'Repository Policies' section, turn 'On' the policy 'Commit author email validation' and configure the author email patterns.",ADO_PROJECT_ALLREPOSITORIES_REPOPOLICY_COMMIT_AUTHOR_EMAIL_VALIDATION
Project,ADO Secure Projects - General,Secure your projects by ensuring private visibility and validating the settings.,High,DOS1310,Enable Advanced Security for new Repositories,Automatically enable Advanced Security for new repositories. New repositories in this project will be initialized with Advanced Security enabled by default. Advanced Security can be disabled on a repository at any time. Advanced Security is billed based on the number of unique active committers across all enabled repositories in your subscription. Learn more: https://learn.microsoft.com/en-us/azure/devops/repos/security/configure-github-advanced-security-features,1. Go to Project Settings.  2. Select Repos -> Repositories.  3. Select the Settings tab.  4. Turn 'On' the setting 'Automatically enable Advanced Security for new repositories'.,ADO_PROJECT_ADVANCEDSECURITY_ENABLE_FOR_NEW_REPOS
Project,ADO Secure Projects - General,Secure your projects by ensuring private visibility and validating the settings.,High,DOS2327,Pipelines - Variable group secrets should only be linked to a key vault,"Link an existing Azure key vault to a variable group and map selective vault secrets to the variable group. When a variable group is not linked to a key vault, it is important to ensure that it does not contain any secrets. Learn more: https://learn.microsoft.com/en-us/azure/devops/pipelines/library/variable-groups#link-secrets-from-an-azure-key-vault https://learn.microsoft.com/en-us/azure/devops/pipelines/library/variable-groups?tabs=classic https://learn.microsoft.com/en-us/azure/devops/organizations/security/security-best-practices?#tasks","1. Navigate to Project -> Pipelines -> Library  2. Select a variable group.  3. In the Variable groups page, enable Link secrets from an Azure key vault as variables.",ADO_PROJECT_PIPELINES_LIBRARY_VARIABLEGROUP_LINK_SECRETS_FROM_AKV
Project,ADO Secure Projects - General,Secure your projects by ensuring private visibility and validating the settings.,Medium,DOS2130,A project must have at least 2 and no more than 5 administrators,"Your project should have at least 2 and at most 5 Project Administrators. To reduce the risk of losing admin access, you may want to ensure at least 2 users are part of the Project Administrators group. Limit the number of administrators to no more than 5 for your project. Learn more: https://learn.microsoft.com/en-us/azure/devops/organizations/security/look-up-project-administrators",1. Go to Project Settings.  2. Click on General -> Permissions.  3. Groups - Select ' Project Administrators'.  4. Review all members of this group.,ADO_PROJECT_LIMIT_MIN_MAX_ADMINS
Project,ADO Secure Projects - General,Secure your projects by ensuring private visibility and validating the settings.,Medium,DOS2070,All Repositories - Repository Policies - Case enforcement,"Enable the 'Case enforcement' repository policy setting, so that you block contributors from introducing case-only differences. Avoid case-sensitivity conflicts by blocking pushes that change name casing on files, folders, branches, and tags. Learn more: https://learn.microsoft.com/en-us/azure/devops/repos/git/repository-settings?#case-enforcement-policy https://learn.microsoft.com/en-us/azure/devops/repos/git/os-compatibility  https://learn.microsoft.com/en-us/azure/devops/organizations/security/security-best-practices#repositories-and-branches","1. Navigate to Project Settings.  2. Open the Repositories link under Repos.  3. Under 'All Repositories' page, click on Policies tab.  4. Under 'Repository Policies' section, turn 'On' the policy 'Case enforcement'.",ADO_PROJECT_ALLREPOSITORIES_REPOPOLICY_CASE_ENFORCEMENT
Project,ADO Secure Projects - General,Secure your projects by ensuring private visibility and validating the settings.,Medium,DOS2090,All Repositories - Repository Policies - Maximum file size (10 MB),"Enable the 'Maximum file size' repository policy setting, so that you block files over a certain size from entering the repository. This policy will reject pushes to a repository for files which exceed the specified size. Block pushes that contain new or updated files larger than this limit. Learn more: https://learn.microsoft.com/en-us/azure/devops/repos/git/repository-settings?#maximum-file-size-policy https://learn.microsoft.com/en-us/azure/devops/organizations/security/security-best-practices#repositories-and-branches","1. Navigate to Project Settings.  2. Open the Repositories link under Repos.  3. Under 'All Repositories' page, click on Policies tab.  4. Under 'Repository Policies' section, turn 'On' the policy 'Maximum file size' and select the (10 MB) value from the drop down list.",ADO_PROJECT_ALLREPOSITORIES_REPOPOLICY_MAXIMUM_FILE_SIZE
Project,ADO Secure Projects - General,Secure your projects by ensuring private visibility and validating the settings.,Medium,DOS2100,All Repositories - Repository Policies - Maximum path length (248),"Enable the 'Maximum path length' repository policy setting, so that you block pushes that contain files or directories with path lengths that are invalid on any platform. This policy will reject pushes to a repository for paths which exceed the specified length. Block pushes that introduce paths that exceed the specified length. The default maximum value is 248, because that maximum length is 100% supported across all three major platforms. Learn more: https://learn.microsoft.com/en-us/azure/devops/repos/git/repository-settings?#maximum-path-length-policy https://learn.microsoft.com/en-us/azure/devops/organizations/security/security-best-practices#repositories-and-branches","1. Navigate to Project Settings.  2. Open the Repositories link under Repos.  3. Under 'All Repositories' page, click on Policies tab.  4. Under 'Repository Policies' section, turn 'On' the policy 'Maximum path length' and configure the length to be 248 chars supported across all three major platforms.",ADO_PROJECT_ALLREPOSITORIES_REPOPOLICY_MAXIMUM_PATH_LENGTH
Project,ADO Secure Projects - General,Secure your projects by ensuring private visibility and validating the settings.,Medium,DOS2110,All Repositories - Repository Policies - Reserved names,"Enable the 'Reserved names' repository policy setting, so that you block pushes to a repository that contain file or folder names that are invalid on all platforms. This policy will reject pushes to a repository for names which aren't valid on all supported client OSes. Block pushes that introduce files, folders, or branch names that include platform reserved names or incompatible characters. Learn more: https://learn.microsoft.com/en-us/azure/devops/repos/git/repository-settings?#reserved-names-policy https://learn.microsoft.com/en-us/azure/devops/organizations/security/security-best-practices#repositories-and-branches","1. Navigate to Project Settings.  2. Open the Repositories link under Repos.  3. Under 'All Repositories' page, click on Policies tab.  4. Under 'Repository Policies' section, turn 'On' the policy 'Reserved names'.",ADO_PROJECT_ALLREPOSITORIES_REPOPOLICY_RESERVED_NAMES
Project,ADO Secure Projects - General,Secure your projects by ensuring private visibility and validating the settings.,Low,DOS2325,Pipelines - Environment should have a description,Make sure to add a description to your pipeline environment. Include a description in your pipeline environment for clarity and purpose. Learn more: https://learn.microsoft.com/en-us/azure/devops/pipelines/process/environments,1. Navigate to Project -> Pipelines -> Environments  2. Select an environment.  3. Click on the three dots button (top right).  4. Click Edit.  5. Enter a Description.  6. Click on 'Save'.,ADO_PROJECT_PIPELINES_LIBRARY_ENVIRONMENT_SHOULD_HAVE_DESCRIPTION
Project,ADO Secure Projects - General,Secure your projects by ensuring private visibility and validating the settings.,Low,DOS2475,Pipelines - Service connection should have a description,Make sure to provide a description for your pipeline service connection. Adding a description will help users understand its purpose and when to use it. Learn more: https://learn.microsoft.com/en-us/azure/devops/pipelines/library/service-endpoints,1. Navigate to Project Settings.  2. Open the Service connections link under Pipelines.  3. Select a service connection.  4. Click on Edit button.  5. Enter a Description.  6. Click on 'Save'.,ADO_PROJECT_SERVICECONNECTION_SHOULD_HAVE_DESCRIPTION
Project,ADO Secure Projects - General,Secure your projects by ensuring private visibility and validating the settings.,Low,DOS2326,Pipelines - Variable group should have a description,Make sure to add a description to your pipeline variable group. This description will help define its purpose and provide clarity to users about the role of the variable group. Learn more: https://learn.microsoft.com/en-us/azure/devops/pipelines/library/variable-groups?tabs=classic,1. Navigate to Project -> Pipelines -> Library  2. Select a variable group.  3. Enter a Description.  4. Click on 'Save'.,ADO_PROJECT_PIPELINES_LIBRARY_VARIABLEGROUP_SHOULD_HAVE_DESCRIPTION
Project,ADO Secure Projects - General,Secure your projects by ensuring private visibility and validating the settings.,Low,DOS2335,Project should have a description,Include a project description for clarity and purpose. Describe your project and make it easier for other people to understand it. Learn more: https://learn.microsoft.com/en-us/azure/devops/organizations/projects/create-project,1. Navigate to Project Settings.  2. Select General -> Overview.  3. Enter a Description.  4. Click on 'Save'.,ADO_PROJECT_SHOULD_HAVE_DESCRIPTION
Project,ADO Secure Projects - General,Secure your projects by ensuring private visibility and validating the settings.,Low,DOS2336,Project Team should have a description,Include a description to your project team for clarity and purpose. Learn more: https://learn.microsoft.com/en-us/azure/devops/organizations/settings/add-teams,"1. Navigate to Project Settings.  2. Select General -> Teams.  3. Select a team.  4. Click on Settings tab.  5. Under 'Team Details' section, enter a Description.  6. Click on 'Save'.",ADO_PROJECT_TEAM_SHOULD_HAVE_DESCRIPTION
Project,ADO Secure Projects - Pipeline Permissions,Secure your projects' pipelines by configuring the pipeline permissions.,High,DOS2280,Do not make the Agent Pool accessible to all YAML Pipelines,Agent Pool must not be granted access to all YAML pipelines. Lock down the agent pool and only allow selected YAML pipelines to access it. Learn more: https://learn.microsoft.com/en-us/azure/devops/pipelines/security/resources#pipeline-permissions https://learn.microsoft.com/en-us/azure/devops/pipelines/policies/permissions#set-individual-agent-pool-permissions https://learn.microsoft.com/en-us/azure/devops/pipelines/security/resources,1. Navigate to Project Settings.  2. Open the Agent pools link under Pipelines.  3. Select an agent pool.  4. Click on Security tab.  5. Review Pipeline permissions and click on 'Restrict permission' to only allowed pipelines.,ADO_PROJECT_PIPELINEPERMISSIONS_AGENTPOOL_DONT_GRANT_ALL_YAML_PIPELINES_ACCESS
Project,ADO Secure Projects - Pipeline Permissions,Secure your projects' pipelines by configuring the pipeline permissions.,High,DOS2290,Do not make the Environment accessible to all YAML Pipelines,Environment must not be granted access to all YAML pipelines. Lock down the environment and only allow selected YAML pipelines to access it. Learn more: https://learn.microsoft.com/en-us/azure/devops/pipelines/security/resources,"1. Navigate to Project -> Pipelines -> Environments  2. Select an environment.  3. Click on the three dots button.  4. Click Security.  5. Under 'Pipeline permissions' section, click 'Restrict Permission' to avoid granting access to all YAML pipelines. Add the YAML pipelines that need explicit access on this environment.",ADO_PROJECT_PIPELINEPERMISSIONS_ENVIRONMENT_DONT_GRANT_ALL_YAML_PIPELINES_ACCESS
Project,ADO Secure Projects - Pipeline Permissions,Secure your projects' pipelines by configuring the pipeline permissions.,High,DOS2300,Do not make the Secure File accessible to all YAML Pipelines,Secure File must not be granted access to all YAML pipelines. Lock down the secure file and only allow selected YAML pipelines to access it. Information can be steal from the secure file if an unautorized user builds a YAML pipeline that can access the secure file. Learn more: https://learn.microsoft.com/en-us/azure/devops/pipelines/security/resources,1. Navigate to Project -> Pipelines -> Library  2. Select a secure file.  3. Click on 'Pipeline permissions'.  4. Click on 'Restrict permission'.  5. Click + to add the YAML pipeline that needs permission to the secure file.,ADO_PROJECT_PIPELINEPERMISSIONS_SECUREFILE_DONT_GRANT_ALL_YAML_PIPELINES_ACCESS
Project,ADO Secure Projects - Pipeline Permissions,Secure your projects' pipelines by configuring the pipeline permissions.,High,DOS2310,Do not make the Service Connection accessible to all YAML Pipelines,"Service connections must not be granted access to all YAML pipelines. Lock down the service connection and only allow selected YAML pipelines to consume the service connection. If any other YAML pipeline refers to the service connection, an authorization request gets raised, which must be approved by a connection Administrator. Learn more: https://docs.microsoft.com/en-us/azure/devops/pipelines/library/service-endpoints?view=azure-devops&tabs=yaml#pipeline-permissions https://learn.microsoft.com/en-us/azure/devops/pipelines/security/resources","1. Navigate to Project Settings.  2. Open the Service connections link under Pipelines.  3. Select a service connection.  4. Click on the three dots button.  5. Click Security.  6. Under 'Pipeline permissions' section, click 'Restrict Permission' to avoid granting access to all YAML pipelines. Add the YAML pipelines that need explicit access on this service connection.",ADO_PROJECT_PIPELINEPERMISSIONS_SERVICECONNECTION_DONT_GRANT_ALL_YAML_PIPELINES_ACCESS
Project,ADO Secure Projects - Pipeline Permissions,Secure your projects' pipelines by configuring the pipeline permissions.,High,DOS2320,Do not make the Variable Group with secret variables accessible to all YAML Pipelines,Variable Group with secret variables must not be granted access to all YAML pipelines. Lock down the variable group and only allow selected YAML pipelines to access it. Learn more: https://learn.microsoft.com/en-us/azure/devops/pipelines/security/resources,1. Navigate to Project -> Pipelines -> Library  2. Select a variable group.  3. Click on 'Pipeline permissions'.  4. Click on 'Restrict permission'.  5. Click + to add the YAML pipeline that needs permission to the variable group.,ADO_PROJECT_PIPELINEPERMISSIONS_VARIABLEGROUP_WITH_SECRETS_DONT_GRANT_ALL_YAML_PIPELINES_ACCESS
Project,ADO Secure Projects - Pipeline resource protection - Checks,Secure your projects' pipelines by configuring checks on your protected resources.,High,DOS2140,Pipeline Protected Resources - Checks - Configure a protected branch check on each production environment,Allow deployments based on branches linked to the run. Extend pipeline protection by configuring a protected branch check on each of your resources. This will automatically stop your pipeline from running on top of any user branches. Most pipelines need a second set of eyes look over changes (especially to the pipeline itself) before deploying to production. Checks allow you to pause the pipeline run until certain conditions are met. Learn more: https://learn.microsoft.com/en-us/azure/devops/pipelines/security/resources#checks https://learn.microsoft.com/en-us/azure/devops/pipelines/process/approvals https://learn.microsoft.com/en-us/azure/devops/pipelines/process/environments,1. Navigate to Project -> Pipelines -> Environments  2. Select an environment.  3. Click on 'Approvals and checks' tab.  4. Click on '+' button to add a new 'Branch control' check.,ADO_PROJECT_PIPELINE_CHECKS_ENVIRONMENT_CONFIGURE_BRANCH_CONTROL_CHECK_FOR_PRODUCTION
Project,ADO Secure Projects - Pipeline resource protection - Checks,Secure your projects' pipelines by configuring checks on your protected resources.,High,DOS2152,Pipeline Protected Resources - Checks - Configure a protected branch check on each production service connection,Allow deployments based on branches linked to the run. Extend pipeline protection by configuring a protected branch check on each of your resources. This will automatically stop your pipeline from running on top of any user branches. Most pipelines need a second set of eyes look over changes (especially to the pipeline itself) before deploying to production. Checks allow you to pause the pipeline run until certain conditions are met. Learn more: https://learn.microsoft.com/en-us/azure/devops/pipelines/security/resources#checks https://learn.microsoft.com/en-us/azure/devops/pipelines/process/approvals https://learn.microsoft.com/en-us/azure/devops/pipelines/library/service-endpoints,1. Navigate to Project Settings.  2. Open the Service connections link under Pipelines.  3. Select a service connection.  4. Click on 'Approvals and checks' tab.  5. Add a new 'Branch control' check.,ADO_PROJECT_PIPELINE_CHECKS_SERVICECONNECTION_CONFIGURE_BRANCH_CONTROL_CHECK_FOR_PRODUCTION
Project,ADO Secure Projects - Pipeline resource protection - Checks,Secure your projects' pipelines by configuring checks on your protected resources.,High,DOS2145,Pipeline Protected Resources - Checks - Protect your production environment with approvals and checks,Checks allow you to manage how this resource is used. Extend pipeline protection by configuring checks on each of your resources. Most pipelines need a second set of eyes look over changes (especially to the pipeline itself) before deploying to production. Checks allow you to pause the pipeline run until certain conditions are met. Learn more: https://learn.microsoft.com/en-us/azure/devops/pipelines/security/resources#checks https://learn.microsoft.com/en-us/azure/devops/pipelines/process/approvals https://learn.microsoft.com/en-us/azure/devops/pipelines/process/environments,1. Navigate to Project -> Pipelines -> Environments  2. Select an environment.  3. Click on 'Approvals and checks' tab.  4. Click on 'Add your first check' / 'View all checks' to add one or more checks.  5. Click 'Create' to add the check.,ADO_PROJECT_PIPELINE_CHECKS_ENVIRONMENT_PRODUCTION_PROTECT_WITH_CHECKS
Project,ADO Secure Projects - Pipeline resource protection - Checks,Secure your projects' pipelines by configuring checks on your protected resources.,High,DOS2155,Pipeline Protected Resources - Checks - Protect your production service connection with approvals and checks,Checks allow you to manage how this resource is used. Extend pipeline protection by configuring checks on your production resources. Most pipelines need a second set of eyes look over changes (especially to the pipeline itself) before deploying to production. Checks allow you to pause the pipeline run until certain conditions are met. Learn more: https://learn.microsoft.com/en-us/azure/devops/pipelines/security/resources#checks https://learn.microsoft.com/en-us/azure/devops/pipelines/process/approvals https://learn.microsoft.com/en-us/azure/devops/pipelines/library/service-endpoints,1. Navigate to Project Settings.  2. Open the Service connections link under Pipelines.  3. Select a service connection.  4. Click on 'Approvals and checks' tab.  5. Click on 'Add your first check' / 'View all checks' to add one or more checks.  6. Click 'Create' to add the check.,ADO_PROJECT_PIPELINE_CHECKS_SERVICECONNECTION_PRODUCTION_PROTECT_WITH_CHECKS
Project,ADO Secure Projects - Pipeline resource protection - Checks,Secure your projects' pipelines by configuring checks on your protected resources.,High,DOS2135,Pipeline Protected Resources - Checks - Require approvals on each production environment,Approvers should grant approval for deployment. Extend pipeline protection by configuring a manual approval check on each of your resources. This will automatically stop your pipeline from running on top of any user branches. Most pipelines need a second set of eyes look over changes (especially to the pipeline itself) before deploying to production. Checks allow you to pause the pipeline run until certain conditions are met. Learn more: https://learn.microsoft.com/en-us/azure/devops/pipelines/security/resources#checks https://learn.microsoft.com/en-us/azure/devops/pipelines/process/approvals https://learn.microsoft.com/en-us/azure/devops/pipelines/process/environments,1. Navigate to Project -> Pipelines -> Environments  2. Select an environment.  3. Click on 'Approvals and checks' tab.  4. Click on '+' button to add a new 'Approvals' check and choose your 'Approvers'.  6. Click 'Create' to add the check.,ADO_PROJECT_PIPELINE_CHECKS_ENVIRONMENT_CONFIGURE_APPROVALS_FOR_PRODUCTION
Project,ADO Secure Projects - Pipeline resource protection - Checks,Secure your projects' pipelines by configuring checks on your protected resources.,High,DOS2150,Pipeline Protected Resources - Checks - Require approvals on each production service connection,Approvers should grant approval for deployment. Extend pipeline protection by configuring a manual approval check on your production resources. Most pipelines need a second set of eyes look over changes (especially to the pipeline itself) before deploying to production. Checks allow you to pause the pipeline run until certain conditions are met. Learn more: https://learn.microsoft.com/en-us/azure/devops/pipelines/security/resources#checks https://learn.microsoft.com/en-us/azure/devops/pipelines/process/approvals https://learn.microsoft.com/en-us/azure/devops/pipelines/library/service-endpoints,1. Navigate to Project Settings.  2. Open the Service connections link under Pipelines.  3. Select a service connection.  4. Click on 'Approvals and checks' tab.  5. Add a new 'Approvals' check and choose your 'Approvers'.  6. Click 'Create' to add the check.,ADO_PROJECT_PIPELINE_CHECKS_SERVICECONNECTION_CONFIGURE_APPROVALS_FOR_PRODUCTION
Project,ADO Secure Projects - Security Roles,Secure your projects by restricting user permissions and assigned roles.,High,DOS2340,Security Roles - Restrict common group access permissions on agent pool,"The groups (Contributors, Readers, Project Collection Valid Users, Project Valid Users) should not have elavated permissions (Admin/User). User permissions for certain groups must be restricted to read-only access. Learn more: https://learn.microsoft.com/en-us/azure/devops/organizations/security/security-best-practices#scoped-permissions https://learn.microsoft.com/en-us/azure/devops/organizations/security/permissions https://learn.microsoft.com/en-us/azure/devops/organizations/security/permissions-lookup-guide https://learn.microsoft.com/en-us/azure/devops/pipelines/security/resources?#user-permissions https://learn.microsoft.com/en-us/azure/devops/pipelines/policies/permissions#set-agent-pool-permissions","1. Navigate to Project Settings.  2. Open the Agent pools link under Pipelines.  3. Select an agent pool.  4. Click on Security tab.  5. Under 'User permissions' section, review security roles and ensure common groups have only read-only access.",ADO_PROJECT_SECURITYROLES_AGENTPOOL_RESTRICT_COMMON_GROUP_ACCESS
Project,ADO Secure Projects - Security Roles,Secure your projects by restricting user permissions and assigned roles.,High,DOS2360,Security Roles - Restrict common group access permissions on environment,"The groups (Contributors, Readers, Project Collection Valid Users, Project Valid Users) should not have elavated permissions (Admin/User). User permissions for certain groups must be restricted to read-only access. Learn more: https://learn.microsoft.com/en-us/azure/devops/organizations/security/security-best-practices#scoped-permissions  https://learn.microsoft.com/en-us/azure/devops/organizations/security/permissions https://learn.microsoft.com/en-us/azure/devops/organizations/security/permissions-lookup-guide https://learn.microsoft.com/en-us/azure/devops/pipelines/security/resources?#user-permissions https://learn.microsoft.com/en-us/azure/devops/pipelines/policies/permissions#set-environment-permissions","1. Navigate to Project -> Pipelines -> Environments  2. Select an environment.  3. Click on the three dots button (top right).  4. Click on Security.  5. Under 'User permissions' section, review security roles and ensure common groups have only read-only access.",ADO_PROJECT_SECURITYROLES_ENVIRONMENT_RESTRICT_COMMON_GROUP_ACCESS
Project,ADO Secure Projects - Security Roles,Secure your projects by restricting user permissions and assigned roles.,High,DOS2390,Security Roles - Restrict common group access permissions on secure file,"The groups (Contributors, Readers, Project Collection Valid Users, Project Valid Users) should not have elavated permissions (Admin/User). User permissions for certain groups must be restricted to read-only access. Learn more: https://learn.microsoft.com/en-us/azure/devops/organizations/security/security-best-practices#scoped-permissions  https://learn.microsoft.com/en-us/azure/devops/organizations/security/permissions https://learn.microsoft.com/en-us/azure/devops/organizations/security/permissions-lookup-guide https://learn.microsoft.com/en-us/azure/devops/pipelines/security/resources?#user-permissions https://learn.microsoft.com/en-us/azure/devops/pipelines/policies/permissions#set-library-permissions","1. Navigate to Project -> Pipelines -> Library  2. On 'Library' page, click on 'Secure files' tab.  3. Select a secure file from the list.  4. Click on Security button.  5. Review security roles and ensure common groups have only read-only access.",ADO_PROJECT_SECURITYROLES_SECUREFILE_RESTRICT_COMMON_GROUP_ACCESS
Project,ADO Secure Projects - Security Roles,Secure your projects by restricting user permissions and assigned roles.,High,DOS2420,Security Roles - Restrict common group access permissions on variable group,"The groups (Contributors, Readers, Project Collection Valid Users, Project Valid Users) should not have elavated permissions (Admin/User). User permissions for certain groups must be restricted to read-only access. Learn more: https://learn.microsoft.com/en-us/azure/devops/organizations/security/security-best-practices#scoped-permissions  https://learn.microsoft.com/en-us/azure/devops/organizations/security/permissions https://learn.microsoft.com/en-us/azure/devops/organizations/security/permissions-lookup-guide https://learn.microsoft.com/en-us/azure/devops/pipelines/security/resources?#user-permissions https://learn.microsoft.com/en-us/azure/devops/pipelines/policies/permissions#set-library-permissions","1. Navigate to Project -> Pipelines -> Library  2. On 'Library' page, click on 'Variable groups' tab.  3. Select a variable group from the list.  4. Click on Security button.  5. Review security roles and ensure common groups have only read-only access.",ADO_PROJECT_SECURITYROLES_VARIABLEGROUP_RESTRICT_COMMON_GROUP_ACCESS
Project,ADO Secure Projects - Security Roles,Secure your projects by restricting user permissions and assigned roles.,High,DOS2400,Security Roles - Restrict global group access permissions on service connection,"The global groups (Administrators, Service Accounts, Contributors, Creators, Readers, Valid Users) should not have elavated permissions (Admin/User). User permissions for certain groups must be restricted to read-only access. Learn more: https://learn.microsoft.com/en-us/azure/devops/organizations/security/security-best-practices#scoped-permissions  https://learn.microsoft.com/en-us/azure/devops/organizations/security/permissions https://learn.microsoft.com/en-us/azure/devops/organizations/security/permissions-lookup-guide https://learn.microsoft.com/en-us/azure/devops/pipelines/security/resources?#user-permissions https://learn.microsoft.com/en-us/azure/devops/pipelines/policies/permissions#set-service-connection-permissions","1. Navigate to Project Settings.  2. Open the Service connections link under Pipelines.  3. Select a service connection.  4. Click on the three dots button.  5. Click Security.  6. Under 'User permissions' section, review security roles and ensure common groups have only read-only access.",ADO_PROJECT_SECURITYROLES_SERVICECONNECTION_RESTRICT_COMMON_GROUP_ACCESS
Project,ADO Secure Projects - Security Roles,Secure your projects by restricting user permissions and assigned roles.,High,DOS2350,Security Roles - Restrict inherited common group access permissions on agent pool,"Do not allow agent pools to inherit elavated permissions from project level user permissions. The groups (Contributors, Readers, Project Collection Valid Users, Project Valid Users) should not have elavated permissions (Admin/User). User permissions for certain groups must be restricted to read-only access. Learn more: https://learn.microsoft.com/en-us/azure/devops/organizations/security/security-best-practices#scoped-permissions https://learn.microsoft.com/en-us/azure/devops/organizations/security/permissions https://learn.microsoft.com/en-us/azure/devops/organizations/security/permissions-lookup-guide https://learn.microsoft.com/en-us/azure/devops/pipelines/security/resources?#user-permissions https://learn.microsoft.com/en-us/azure/devops/pipelines/policies/permissions#set-agent-pool-permissions","1. Navigate to Project Settings.  2. Open the Agent pools link under Pipelines.  3. On 'Agent pools' page, click on Security button (top right).  4. On 'User permissions' panel, review security roles and ensure common groups have only read-only access.",ADO_PROJECT_SECURITYROLES_AGENTPOOL_RESTRICT_INHERITED_COMMON_GROUP_ACCESS
Project,ADO Secure Projects - Security Roles,Secure your projects by restricting user permissions and assigned roles.,High,DOS2370,Security Roles - Restrict inherited common group access permissions on environment,"Do not allow environments to inherit elavated permissions from project level user permissions. The groups (Contributors, Readers, Project Collection Valid Users, Project Valid Users) should not have elavated permissions (Admin/User). User permissions for certain groups must be restricted to read-only access. Learn more: https://learn.microsoft.com/en-us/azure/devops/organizations/security/security-best-practices#scoped-permissions  https://learn.microsoft.com/en-us/azure/devops/organizations/security/permissions https://learn.microsoft.com/en-us/azure/devops/organizations/security/permissions-lookup-guide https://learn.microsoft.com/en-us/azure/devops/pipelines/security/resources?#user-permissions https://learn.microsoft.com/en-us/azure/devops/pipelines/policies/permissions#set-environment-permissions","1. Navigate to Project -> Pipelines -> Environments  2. On 'Environments' page, click on the three dots button (top right).  3. Click on Security.  4. Under 'User permissions' section, review security roles and ensure common groups have only read-only access.",ADO_PROJECT_SECURITYROLES_ENVIRONMENT_RESTRICT_INHERITED_COMMON_GROUP_ACCESS
Project,ADO Secure Projects - Security Roles,Secure your projects by restricting user permissions and assigned roles.,High,DOS2410,Security Roles - Restrict inherited common group access permissions on service connection,"Do not allow service connections to inherit elavated permissions from project level user permissions. The groups (Contributors, Readers, Project Collection Valid Users, Project Valid Users) should not have elavated permissions (Admin/User). User permissions for certain groups must be restricted to read-only access. Learn more: https://learn.microsoft.com/en-us/azure/devops/organizations/security/security-best-practices#scoped-permissions  https://learn.microsoft.com/en-us/azure/devops/organizations/security/permissions https://learn.microsoft.com/en-us/azure/devops/organizations/security/permissions-lookup-guide https://learn.microsoft.com/en-us/azure/devops/pipelines/security/resources?#user-permissions https://learn.microsoft.com/en-us/azure/devops/pipelines/policies/permissions#set-service-connection-permissions","1. Navigate to Project Settings.  2. Open the Service connections link under Pipelines.  3. On 'Service connections' page, click on the three dots button (top right).  5. Click Security.  6. Review security roles and ensure common groups have only read-only access.",ADO_PROJECT_SECURITYROLES_SERVICECONNECTION_RESTRICT_INHERITED_COMMON_GROUP_ACCESS
Project,ADO Secure Projects - Security Roles,Secure your projects by restricting user permissions and assigned roles.,High,DOS2380,Security Roles - Restrict inherited common group access permissions on variable group and secure file,"Do not allow variable groups and secure files to inherit elavated permissions from project level user permissions. The groups (Contributors, Readers, Project Collection Valid Users, Project Valid Users) should not have elavated permissions (Admin/User). User permissions for certain groups must be restricted to read-only access. Learn more: https://learn.microsoft.com/en-us/azure/devops/organizations/security/security-best-practices#scoped-permissions  https://learn.microsoft.com/en-us/azure/devops/organizations/security/permissions https://learn.microsoft.com/en-us/azure/devops/organizations/security/permissions-lookup-guide https://learn.microsoft.com/en-us/azure/devops/pipelines/security/resources?#user-permissions https://learn.microsoft.com/en-us/azure/devops/pipelines/policies/permissions#set-library-permissions","1. Navigate to Project -> Pipelines -> Library  2. On 'Library' page, click on Security button.  3. Review security roles and ensure common groups have only read-only access.",ADO_PROJECT_SECURITYROLES_LIBRARY_RESTRICT_INHERITED_COMMON_GROUP_ACCESS
Project,ADO Secure Projects - Service Connections,Secure your projects' services connections by configuring the permissions and securing your connections.,High,DOS2460,Azure service connection should not be granted access to subscription or management group,Azure Resource Manager service connection should restrict scope level access only to specific resource or resource group as needed. It is important to not provide subscription or management group access for the 'automatic' service principal. Learn more: https://learn.microsoft.com/en-us/azure/devops/organizations/security/security-best-practices#scope-service-connections https://learn.microsoft.com/en-us/azure/devops/pipelines/security/resources https://learn.microsoft.com/en-us/azure/devops/pipelines/library/service-endpoints,1. Navigate to Project Settings.  2. Open the Service connections link under Pipelines.  3. Select a service connection of type 'Azure Resource Manager'.  4. Click on Edit.  5. Reduce the scope to the appropiate resource group.  6. Save the changes.,ADO_PROJECT_SERVICECONNECTION_LIMIT_SCOPELEVEL_TO_USE_LEAST_PRIVILEGE_ACCESS
Project,ADO Secure Projects - Service Connections,Secure your projects' services connections by configuring the permissions and securing your connections.,High,DOS2430,Azure service connection should use Workload Identity federation with OpenID Connect for authentication,"Use workload identity federation for your Azure Resource Manager (ARM) service connections. Workload identity federation allows you to create secret-free service connections in Azure Pipelines to Azure. Convert your existing Azure Resource Manager service connections which use secrets to authenticate to leverage Workload identity federation instead, for improved security and simplified maintenance. Learn more: https://learn.microsoft.com/en-us/azure/devops/organizations/security/security-best-practices#scope-service-connections https://learn.microsoft.com/en-us/azure/devops/pipelines/library/connect-to-azure?#create-an-azure-resource-manager-service-connection-using-workload-identity-federation https://learn.microsoft.com/en-us/azure/devops/pipelines/library/service-endpoints https://devblogs.microsoft.com/premier-developer/azure-devops-workload-identity-federation/",1. Navigate to Project Settings.  2. Open the Service connections link under Pipelines.  3. Select a service connection of type 'Azure Resource Manager'.  4. Click on Convert button to 'Convert your service connections to workload identity federation for improved security and simplified maintenance.'.  5. Accept the changes by clicking Convert.,ADO_PROJECT_SERVICECONNECTION_AZURERESOURCEMANAGER_USE_WORKLOAD_IDENTITY_FEDERATION_AUTHENTICATION
Project,ADO Secure Projects - Service Connections,Secure your projects' services connections by configuring the permissions and securing your connections.,High,DOS2310,Do not make the Service Connection accessible to all YAML Pipelines,"Service connections must not be granted access to all YAML pipelines. Lock down the service connection and only allow selected YAML pipelines to consume the service connection. If any other YAML pipeline refers to the service connection, an authorization request gets raised, which must be approved by a connection Administrator. Learn more: https://docs.microsoft.com/en-us/azure/devops/pipelines/library/service-endpoints?view=azure-devops&tabs=yaml#pipeline-permissions https://learn.microsoft.com/en-us/azure/devops/pipelines/security/resources","1. Navigate to Project Settings.  2. Open the Service connections link under Pipelines.  3. Select a service connection.  4. Click on the three dots button.  5. Click Security.  6. Under 'Pipeline permissions' section, click 'Restrict Permission' to avoid granting access to all YAML pipelines. Add the YAML pipelines that need explicit access on this service connection.",ADO_PROJECT_PIPELINEPERMISSIONS_SERVICECONNECTION_DONT_GRANT_ALL_YAML_PIPELINES_ACCESS
Project,ADO Secure Projects - Service Connections,Secure your projects' services connections by configuring the permissions and securing your connections.,High,DOS2440,Do not share the Service Connection across multiple projects,You should not share a service connection across multiple projects. Limit the access to the service connection to your current project to avoid unwanted data access from another project. Learn more: https://learn.microsoft.com/en-us/azure/devops/pipelines/library/service-endpoints#project-permissions---cross-project-sharing-of-service-connections https://learn.microsoft.com/en-us/azure/devops/pipelines/security/resources,"1. Navigate to Project Settings.  2. Open the Service connections link under Pipelines.  3. Select a service connection.  4. Click on the three dots button.  5. Click Security.  6. Under 'Project permissions' section, make sure 'Only current project' has access and remove other projects that no more require access to the service connection.",ADO_PROJECT_SERVICECONNECTION_DONT_SHARE_SERVICECONNECTIONS_ACROSS_PROJECTS
Project,ADO Secure Projects - Service Connections,Secure your projects' services connections by configuring the permissions and securing your connections.,High,DOS2450,Do not use Azure Classic service connections to access an Azure subscription,You should use the Azure Resource Manager service connection scoped to a resource group in your subscription. Delete the Azure Classic service connection and create a new ARM service connection to replace it.  Learn more: https://learn.microsoft.com/en-us/azure/devops/organizations/security/security-best-practices#scope-service-connections https://learn.microsoft.com/en-us/azure/devops/pipelines/security/resources https://learn.microsoft.com/en-us/azure/devops/pipelines/library/service-endpoints,1. Navigate to Project Settings.  2. Open the Service connections link under Pipelines.  3. Select the Azure Classic service connection.  4. Click on the three dots button (top right).  5. Click on Delete.  6. Create a new service connection of type 'Azure Resource Manager'.,ADO_PROJECT_SERVICECONNECTION_DONT_USE_AZURECLASSIC_CONNECTIONS
Project,ADO Secure Projects - Service Connections,Secure your projects' services connections by configuring the permissions and securing your connections.,High,DOS2470,Inactive service connection should be reviewed and must be removed if not used,Review inactive service connections and remove them if not required anymore. Inactive services connections must be removed to reduce the attack surface for a malicious user.  Learn more: https://learn.microsoft.com/en-us/azure/devops/pipelines/library/service-endpoints https://learn.microsoft.com/en-us/azure/devops/pipelines/security/resources,1. Navigate to Project Settings.  2. Open the Service connections link under Pipelines.  3. Select a service connection.  4. Click on the Usage history tab and review last run date.  5. Click on the three dots button (top right).  6. Click on Delete.,ADO_PROJECT_SERVICECONNECTION_REVIEW_INACTIVE_SERVICECONNECTIONS
Project,ADO Secure Projects - Service Connections,Secure your projects' services connections by configuring the permissions and securing your connections.,High,DOS2400,Security Roles - Restrict global group access permissions on service connection,"The global groups (Administrators, Service Accounts, Contributors, Creators, Readers, Valid Users) should not have elavated permissions (Admin/User). User permissions for certain groups must be restricted to read-only access. Learn more: https://learn.microsoft.com/en-us/azure/devops/organizations/security/security-best-practices#scoped-permissions  https://learn.microsoft.com/en-us/azure/devops/organizations/security/permissions https://learn.microsoft.com/en-us/azure/devops/organizations/security/permissions-lookup-guide https://learn.microsoft.com/en-us/azure/devops/pipelines/security/resources?#user-permissions https://learn.microsoft.com/en-us/azure/devops/pipelines/policies/permissions#set-service-connection-permissions","1. Navigate to Project Settings.  2. Open the Service connections link under Pipelines.  3. Select a service connection.  4. Click on the three dots button.  5. Click Security.  6. Under 'User permissions' section, review security roles and ensure common groups have only read-only access.",ADO_PROJECT_SECURITYROLES_SERVICECONNECTION_RESTRICT_COMMON_GROUP_ACCESS
Project,ADO Secure Projects - Service Connections,Secure your projects' services connections by configuring the permissions and securing your connections.,Low,DOS2475,Pipelines - Service connection should have a description,Make sure to provide a description for your pipeline service connection. Adding a description will help users understand its purpose and when to use it. Learn more: https://learn.microsoft.com/en-us/azure/devops/pipelines/library/service-endpoints,1. Navigate to Project Settings.  2. Open the Service connections link under Pipelines.  3. Select a service connection.  4. Click on Edit button.  5. Enter a Description.  6. Click on 'Save'.,ADO_PROJECT_SERVICECONNECTION_SHOULD_HAVE_DESCRIPTION
Project,ADO Secure Projects Pipeline Settings - General,Secure projects' pipelines by managing the general pipeline settings.,Critical,DOS2165,Pipeline Settings - Disable building pull requests from forked repositories,"Limit building pull requests from forked GitHub repositories. Disable building pull requests from forked repositories. With this enabled, No pipeline will build pull requests from forked repositories. Learn more: https://learn.microsoft.com/en-us/azure/devops/pipelines/repos/github#contributions-from-forks","1. Navigate to Project Settings.  2. Open the Settings link under Pipelines.  3. Under the 'Triggers' section, turn 'On' the setting 'Limit building pull requests from forked GitHub repositories'.  4. Turn 'On' the setting 'Disable building pull requests from forked repositories'.",ADO_PROJECT_PIPELINE_SETTINGS_DISABLE_BUILDING_PULL_REQUESTS_FROM_FORKED_REPOSITORIES
Project,ADO Secure Projects Pipeline Settings - General,Secure projects' pipelines by managing the general pipeline settings.,Critical,DOS2210,Pipeline Settings - Enforce access to repositories in YAML pipelines.,"Protect access to repositories in YAML pipelines. Restricts the scope of access for all pipelines to only repositories explicitly referenced by the pipeline. Apply checks and approvals when accessing repositories from YAML pipelines. Also, generate a job access token that is scoped to repositories that are explicitly referenced in the YAML pipeline. Learn more: https://learn.microsoft.com/en-us/azure/devops/pipelines/security/secure-access-to-repos",1. Navigate to Project Settings.  2. Open the Settings link under Pipelines.  3. Turn 'On' the setting 'Protect access to repositories in YAML pipelines'.,ADO_PROJECT_PIPELINE_SETTINGS_LIMIT_PIPELINE_SCOPE_TO_REFERENCED_REPOS
Project,ADO Secure Projects Pipeline Settings - General,Secure projects' pipelines by managing the general pipeline settings.,Critical,DOS2200,Pipeline Settings - Enforce job authorization scope to current project for non-release pipelines,"Limit job authorization scope to current project for non-release pipelines. If enabled, scope of access for all pipelines reduces to the current project. Non-Release Pipelines can run with collection scoped access tokens unless this option is enabled. With this option enabled, you can reduce the scope of access for all non-release pipelines to the current project. Learn more: https://learn.microsoft.com/en-us/azure/devops/pipelines/security/secure-access-to-repos https://learn.microsoft.com/en-us/azure/devops/pipelines/process/access-tokens#job-authorization-scope",1. Navigate to Project Settings.  2. Open the Settings link under Pipelines.  3. Turn 'On' the setting 'Limit job authorization scope to current project for non-release pipelines'.,ADO_PROJECT_PIPELINE_SETTINGS_LIMIT_NON_RELEASE_PIPELINE_SCOPE
Project,ADO Secure Projects Pipeline Settings - General,Secure projects' pipelines by managing the general pipeline settings.,Critical,DOS2220,Pipeline Settings - Enforce job authorization scope to current project for release pipelines,"Limit job authorization scope to current project for release pipelines. Release pipelines can run with collection scoped access tokens unless this option is enabled. With this option enabled, you can reduce the scope of access for all release pipelines to the current project. Learn more: https://learn.microsoft.com/en-us/azure/devops/pipelines/security/secure-access-to-repos",1. Navigate to Project Settings.  2. Open the Settings link under Pipelines.  3. Turn 'On' the setting 'Limit job authorization scope to current project for release pipelines'.,ADO_PROJECT_PIPELINE_SETTINGS_LIMIT_RELEASE_PIPELINE_SCOPE
Project,ADO Secure Projects Pipeline Settings - General,Secure projects' pipelines by managing the general pipeline settings.,High,DOS2195,Pipeline Settings - Enable shell tasks arguments validation,"Enable shell tasks args sanitizing. When this is enabled, argument parameters for built-in shell tasks are validated to prevent additional shell commands from being executed. Learn more: https://learn.microsoft.com/en-us/azure/devops/pipelines/security/inputs#shellTasksValidation",1. Navigate to Project Settings.  2. Open the Settings link under Pipelines.  3. Turn 'On' the setting 'Enable shell tasks arguments validation'.,ADO_PROJECT_PIPELINE_SETTINGS_ENABLE_SHELL_TASKS_ARGUMENTS_VALIDATION
Project,ADO Secure Projects Pipeline Settings - General,Secure projects' pipelines by managing the general pipeline settings.,High,DOS2230,Pipeline Settings - Limit variables that can be set at queue time,"Enforce settable variables. If enabled, only those variables that are explicitly marked as 'Settable at queue time' can be set at queue time. You can set any variables at queue time unless this option is enabled. With this option enabled, only those variables that are explicitly marked as 'Settable at queue time' can be set.  Learn more: https://learn.microsoft.com/en-us/azure/devops/pipelines/security/inputs https://learn.microsoft.com/en-us/azure/devops/organizations/security/security-best-practices",1. Navigate to Project Settings.  2. Open the Settings link under Pipelines.  3. Turn 'On' the setting 'Limit variables that can be set at queue time'.,ADO_PROJECT_PIPELINE_SETTINGS_LIMIT_SETTABLE_VARIABLES_AT_QUEUE_TIME
Project,ADO Secure Projects Pipeline Settings - General,Secure projects' pipelines by managing the general pipeline settings.,Medium,DOS2170,Pipeline Settings - Disable creation of classic build pipelines,"Enable the setting 'Disable creation of classic build pipelines'. When this is enabled, no classic build pipelines can be created / imported. Existing ones will continue to work. Learn more: https://devblogs.microsoft.com/devops/disable-creation-of-classic-pipelines",1. Navigate to Project Settings.  2. Open the Settings link under Pipelines.  3. Turn 'On' the setting 'Disable creation of classic build pipelines'.,ADO_PROJECT_PIPELINE_SETTINGS_DISABLE_CREATION_OF_CLASSIC_BUILD_PIPELINES
Project,ADO Secure Projects Pipeline Settings - General,Secure projects' pipelines by managing the general pipeline settings.,Medium,DOS2180,Pipeline Settings - Disable creation of classic release pipelines,"Enable the setting 'Disable creation of classic release pipelines'. When this is enabled, no classic release pipelines, task groups, and deployment groups can be created / imported. Existing ones will continue to work. Learn more: https://devblogs.microsoft.com/devops/disable-creation-of-classic-pipelines",1. Navigate to Project Settings.  2. Open the Settings link under Pipelines.  3. Turn 'On' the setting 'Disable creation of classic release pipelines'.,ADO_PROJECT_PIPELINE_SETTINGS_DISABLE_CREATION_OF_CLASSIC_RELEASE_PIPELINES
Project,ADO Secure Projects Pipeline Settings - General,Secure projects' pipelines by managing the general pipeline settings.,Low,DOS2160,Pipeline Settings - Disable anonymous access to badges,Status badges are private. Anonymous users can access the status badge API for all pipelines unless this option is enabled. Learn more: https://learn.microsoft.com/en-us/azure/devops/pipelines/create-first-pipeline?#add-a-status-badge-to-your-repository,1. Navigate to Project Settings.  2. Open the Settings link under Pipelines.  3. Turn 'On' the setting 'Disable anonymous access to badges'.,ADO_PROJECT_PIPELINE_SETTINGS_DISABLE_ANONYMOUS_ACCESS_TO_BADGES
Project,ADO Secure Projects Pipeline Settings - General,Secure projects' pipelines by managing the general pipeline settings.,Low,DOS2190,Pipeline Settings - Disable implied YAML CI trigger to prevent unintended pipeline runs,Prevent unintended pipeline runs. Enable the setting 'Disable implied YAML CI trigger'. Trigger a pipeline only for code changes that match its trigger section. Do not trigger the pipeline if the trigger section is missing. Learn more: https://learn.microsoft.com/en-us/azure/devops/release-notes/2023/sprint-227-update#prevent-unintended-pipeline-runs https://learn.microsoft.com/en-us/azure/devops/pipelines/yaml-schema/trigger,1. Navigate to Project Settings.  2. Open the Settings link under Pipelines.  3. Turn 'On' the setting 'Disable implied YAML CI trigger'.,ADO_PROJECT_PIPELINE_SETTINGS_DISABLE_IMPLIED_YAML_CI_TRIGGER
Project,ADO Secure Projects Pipeline Settings - Retention Policies,"Retention policies let you set how long to keep artifacts, symbols, attachments, runs, pull request runs and number of recent runs to retain per pipeline. Learn more about run retention: https://docs.microsoft.com/en-us/azure/devops/pipelines/policies/retention",Low,DOS2240,Pipeline Retention Policy - Days to keep Artifacts (>= 30),"Retention policy - Days to keep artifacts, symbols and attachments (>= 30). Learn more: https://learn.microsoft.com/en-us/azure/devops/pipelines/policies/retention","1. Navigate to Project Settings.  2. Open the Settings link under Pipelines.  3. Set the number of days to keep artifacts, symbols, and attachments.",ADO_PROJECT_PIPELINE_SETTINGS_RETENTION_POLICY_ARTIFACTS
Project,ADO Secure Projects Pipeline Settings - Retention Policies,"Retention policies let you set how long to keep artifacts, symbols, attachments, runs, pull request runs and number of recent runs to retain per pipeline. Learn more about run retention: https://docs.microsoft.com/en-us/azure/devops/pipelines/policies/retention",Low,DOS2250,Pipeline Retention Policy - Days to keep Pull Request Runs (>= 10),"Retention policy - Days to keep pull request runs (>= 10). Runs represent one execution of a pipeline. During a run, the pipeline is processed, and agents process one or more jobs. A pipeline run includes jobs, steps, and tasks. Runs power both continuous integration (CI) and continuous delivery (CD) pipelines. Learn more: https://learn.microsoft.com/en-us/azure/devops/pipelines/policies/retention",1. Navigate to Project Settings.  2. Open the Settings link under Pipelines.  3. Set the number of days to keep pull request runs.,ADO_PROJECT_PIPELINE_SETTINGS_RETENTION_POLICY_PR_RUNS
Project,ADO Secure Projects Pipeline Settings - Retention Policies,"Retention policies let you set how long to keep artifacts, symbols, attachments, runs, pull request runs and number of recent runs to retain per pipeline. Learn more about run retention: https://docs.microsoft.com/en-us/azure/devops/pipelines/policies/retention",Low,DOS2270,Pipeline Retention Policy - Days to keep Runs (>= 30),"Retention policy - Days to keep runs (>= 30). Runs represent one execution of a pipeline. During a run, the pipeline is processed, and agents process one or more jobs. A pipeline run includes jobs, steps, and tasks. Runs power both continuous integration (CI) and continuous delivery (CD) pipelines. Learn more: https://learn.microsoft.com/en-us/azure/devops/pipelines/policies/retention",1. Navigate to Project Settings.  2. Open the Settings link under Pipelines.  3. Set the number of days to keep runs.,ADO_PROJECT_PIPELINE_SETTINGS_RETENTION_POLICY_RUNS
Project,ADO Secure Projects Pipeline Settings - Retention Policies,"Retention policies let you set how long to keep artifacts, symbols, attachments, runs, pull request runs and number of recent runs to retain per pipeline. Learn more about run retention: https://docs.microsoft.com/en-us/azure/devops/pipelines/policies/retention",Low,DOS2260,Pipeline Retention Policy - Number of recent runs to retain per pipeline (>= 3),Retention policy - Number of recent runs to retain per pipeline (>= 3). This many runs will also be retained per protected branch and default pipeline branch. (Azure Repos only). Learn more: https://learn.microsoft.com/en-us/azure/devops/pipelines/policies/retention,1. Navigate to Project Settings.  2. Open the Settings link under Pipelines.  3. Set the number of recent runs to keep for each pipeline.,ADO_PROJECT_PIPELINE_SETTINGS_RETENTION_POLICY_RECENT_RUNS_TO_RETAIN_PER_PIPELINE
Repository,ADO Secure Repositories - General,Secure your repositories by validating the settings and applying best practices.,Critical,DOS3160,Branch Policies - Security Permissions - Do not allow bypassing policies,Protect important branches in this repository. This policy will ensure that no user has permissions to bypass policies. Learn more: https://learn.microsoft.com/en-us/azure/devops/organizations/security/security-best-practices?view=azure-devops#secure-azure-repos https://learn.microsoft.com/en-us/azure/devops/repos/git/branch-permissions,"1. Navigate to Project Settings.  2. Open the Repositories link under Repos.  3. Select a repository from the list.  4. Click on Security tab.  5. On the page 'User permissions', ensure the 'Bypass policies when completing pull requests' and 'Bypass policies when pushing' user permisions are 'Not set' or 'Deny'.  6. Under the section 'Git refs permissions', select 'All Branches'.  7. For all important branches of this repository, ensure the branch security does not set or allow any bypass policies.",ADO_PROJECT_REPOSITORY_SECURITYPERMISSIONS_DONT_ALLOW_BYPASS_POLICIES
Repository,ADO Secure Repositories - General,Secure your repositories by validating the settings and applying best practices.,Critical,DOS3410,Pipeline - Enforce job authorization scope to only current project,"Secure access to repos from pipelines. Limit job authorization scope to current project for your pipeline. You can set the job authorization scope to be collection or project. Important: If the scope is not restricted at either the organization level or project level, then every job in your YAML pipeline gets a collection scoped job access token. In other words, your pipeline has access to any repository in any project of your organization. If an adversary is able to gain access to a single pipeline in a single project, they will be able to gain access to any repository in your organization. This is why, it is recommended that you restrict the scope at the highest level (organization settings) in order to contain the attack to a single project. Learn more: https://learn.microsoft.com/en-us/azure/devops/pipelines/process/access-tokens#job-authorization-scope https://learn.microsoft.com/en-us/azure/devops/pipelines/security/secure-access-to-repos",1. Navigate to Project Settings.  2. Open the Settings link under Pipelines.  3. Turn 'On' the setting 'Limit job authorization scope to current project for non-release pipelines'.,ADO_PROJECT_REPOSITORY_PIPELINE_JOBAUTHORIZATIONSCOPE_PROJECT
Repository,ADO Secure Repositories - General,Secure your repositories by validating the settings and applying best practices.,High,DOS3020,Branch Policies - Automatically include code reviewers,"Enable the 'Automatically included reviewers' branch policy, so that you can automatically add reviewers to pull requests that change files in specific directories and files, or to all pull requests in a repo. This policy will ensure that required reviewers are added for modified files matching specified patterns. Designate code reviewers to automatically include when pull requests change certain areas of code. Learn more: https://learn.microsoft.com/en-us/azure/devops/repos/git/branch-policies#automatically-include-code-reviewers https://learn.microsoft.com/en-us/azure/devops/organizations/security/security-best-practices#repositories-and-branches","1. Navigate to Project Settings.  2. Open the Repositories link under Repos.  3. Select a repository from the list.  4. Click on Policies tab.  5. Under 'Branch Policies' section, click on a branch from the list.  6. With the branch selected, under 'Automatically included reviewers' section, click on '+' button to add a new reviewer policy.  7. Ensure at least one policy is enabled.",ADO_PROJECT_REPOSITORY_BRANCHPOLICY_AUTOMATICALLY_INCLUDE_CODE_REVIEWERS
Repository,ADO Secure Repositories - General,Secure your repositories by validating the settings and applying best practices.,High,DOS3030,Branch Policies - Check for comment resolution,"Enable the 'Check for comment resolution' branch policy, so that you require all PR comments to be resolved when pull requests are completed. This policy checks to see that all comments have been resolved on pull requests. Block pull requests from being completed while any comments are active. Learn more: https://learn.microsoft.com/en-us/azure/devops/repos/git/branch-policies#check-for-comment-resolution https://learn.microsoft.com/en-us/azure/devops/organizations/security/security-best-practices#repositories-and-branches","1. Navigate to Project Settings.  2. Open the Repositories link under Repos.  3. Select a repository from the list.  4. Click on Policies tab.  5. Under 'Branch Policies' section, click on a branch from the list.  6. With the branch selected, under 'Branch Policies' section, turn 'On' the policy 'Check for comment resolution'.  7. Configure the policy to be 'Required'.",ADO_PROJECT_REPOSITORY_BRANCHPOLICY_CHECK_FOR_COMMENT_RESOLUTION
Repository,ADO Secure Repositories - General,Secure your repositories by validating the settings and applying best practices.,High,DOS3040,Branch Policies - Check for linked work items,"Enable the 'Check for linked work items' branch policy, so that you require associations between PRs and work items when pull requests are completed. This policy will ensure work item management tracking by requiring associations between PRs and work items. Block pull requests from being completed unless they have at least one linked work item. Learn more: https://learn.microsoft.com/en-us/azure/devops/repos/git/branch-policies#check-for-linked-work-items https://learn.microsoft.com/en-us/azure/devops/organizations/security/security-best-practices#repositories-and-branches","1. Navigate to Project Settings.  2. Open the Repositories link under Repos.  3. Select a repository from the list.  4. Click on Policies tab.  5. Under 'Branch Policies' section, click on a branch from the list.  6. With the branch selected, under 'Branch Policies' section, turn 'On' the policy 'Check for linked work items'.  7. Configure the policy to be 'Required'.",ADO_PROJECT_REPOSITORY_BRANCHPOLICY_CHECK_FOR_LINKED_WORK_ITEMS
Repository,ADO Secure Repositories - General,Secure your repositories by validating the settings and applying best practices.,High,DOS3050,Branch Policies - Limit merge types,"Enable the 'Limit merge types' branch policy, so that you control the branch history by limiting the available types of merge when pull requests are completed. This policy will ensure consistent branch history by enforcing a merge strategy for pull request completion. Defaults to 'Basic merge (no fast-forward)' - Preserves history exactly as it happened during development. Learn more: https://learn.microsoft.com/en-us/azure/devops/repos/git/branch-policies#limit-merge-types https://learn.microsoft.com/en-us/azure/devops/organizations/security/security-best-practices#repositories-and-branches","1. Navigate to Project Settings.  2. Open the Repositories link under Repos.  3. Select a repository from the list.  4. Click on Policies tab.  5. Under 'Branch Policies' section, click on a branch from the list.  6. With the branch selected, under 'Branch Policies' section, turn 'On' the policy 'Limit merge types'.  7. Configure the policy to match your standards and update the policy definition.",ADO_PROJECT_REPOSITORY_BRANCHPOLICY_LIMIT_MERGE_TYPES
Repository,ADO Secure Repositories - General,Secure your repositories by validating the settings and applying best practices.,High,DOS3010,Branch Policies - Protect important branches with required policies,"Enable required branch policies, so that branches cannot be deleted and changes must be made via a pull request. This policy will ensure that best practice policies are required on each repository: Require a minimum number of reviewers, Check for linked work items, Check for comment resolution, Limit merge types, Build Validation policies, Status Check policies, and Automatically included reviewers. Learn more: https://learn.microsoft.com/en-us/azure/devops/repos/git/branch-policies-overview https://learn.microsoft.com/en-us/azure/devops/repos/git/branch-policies https://learn.microsoft.com/en-us/azure/devops/organizations/security/security-best-practices#repositories-and-branches","1. Navigate to Project Settings.  2. Open the Repositories link under Repos.  3. Select a repository from the list.  4. Click on Policies tab.  5. Under 'Branch Policies' section, ensure the important branches have the icon 'Branch has policies' assigned.  6. Click on a branch from the list.  7. Ensure the required policies are turned on and configured to match your standards.",ADO_PROJECT_REPOSITORY_BRANCHPOLICIES_PROTECT_IMPORTANT_BRANCHES_WITH_REQUIRED_POLICIES
Repository,ADO Secure Repositories - General,Secure your repositories by validating the settings and applying best practices.,High,DOS3070,Branch Policies - Require a minimum number of reviewers,"Enable the 'Require a minimum number of reviewers' branch policy, so that every pull request gets reviewed by at least two approvers. This policy will ensure that a minimum number of reviewers have approved a pull request before completion. Learn more: https://learn.microsoft.com/en-us/azure/devops/organizations/security/security-best-practices?view=azure-devops#repositories-and-branches https://learn.microsoft.com/en-us/azure/devops/repos/git/branch-policies#require_reviewers https://learn.microsoft.com/en-us/azure/devops/organizations/security/security-best-practices#repositories-and-branches","1. Navigate to Project Settings.  2. Open the Repositories link under Repos.  3. Select a repository from the list.  4. Click on Policies tab.  5. Under 'Branch Policies' section, click on a branch from the list.  6. With the branch selected, under 'Branch Policies' section, turn 'On' the policy 'Require a minimum number of reviewers'.  7. Configure the policy to match your standards and the current policy definition: Minimum number of reviewers: 2, Prohibit the most recent pusher from approving their own changes: ON, When new changes are pushed: ON (Require at least one approval on the last iteration).",ADO_PROJECT_REPOSITORY_BRANCHPOLICY_REQUIRE_MIN_REVIEWERS
Repository,ADO Secure Repositories - General,Secure your repositories by validating the settings and applying best practices.,High,DOS3060,Branch Policies - Require Build Validation,"Enable the 'Build Validation' branch policy, so that you require pull request changes to build successfully before the PR can complete. The build policy evaluates the build results to determine whether the PR can be completed. Build must succeed in order to complete pull requests. Learn more: https://learn.microsoft.com/en-us/azure/devops/repos/git/branch-policies#build-validation https://learn.microsoft.com/en-us/azure/devops/organizations/security/security-best-practices#repositories-and-branches","1. Navigate to Project Settings.  2. Open the Repositories link under Repos.  3. Select a repository from the list.  4. Click on Policies tab.  5. Under 'Branch Policies' section, click on a branch from the list.  6. With the branch selected, under 'Build Validation' section, click on '+' button to add a new build policy.  7. Ensure at least one policy is enabled.",ADO_PROJECT_REPOSITORY_BRANCHPOLICY_REQUIRE_BUILD_VALIDATION
Repository,ADO Secure Repositories - General,Secure your repositories by validating the settings and applying best practices.,High,DOS3170,Disable Forking,"Disable repository forking. The more forks there are, the harder it is to keep track of each fork’s security. Learn more: https://learn.microsoft.com/en-us/azure/devops/organizations/security/security-best-practices#repositories-and-branches https://learn.microsoft.com/en-us/azure/devops/repos/git/repository-settings#enable-forks","1. Navigate to Project Settings.  2. Open the Repositories link under Repos.  3. Select a repository from the list.  4. Click on Settings tab.  5. Under 'Repository Settings' section, turn 'Off' the setting 'Forks'.",ADO_PROJECT_REPOSITORY_SETTINGS_DISABLE_FORKING
Repository,ADO Secure Repositories - General,Secure your repositories by validating the settings and applying best practices.,High,DOS1320,Enable Advanced Security,"Enable Advanced Security for your repository. A shield icon appears in the repository view for any repository with Advanced Security enabled. You can enable Advanced Security at the organization, project, or repository level. To access each of the scanning tools and results, you need to first enable Advanced Security. Advanced Security is billed based on the number of unique active committers across all enabled repositories in your subscription. Learn more: https://learn.microsoft.com/en-us/azure/devops/repos/security/configure-github-advanced-security-features",1. Go to Project Settings.  2. Select Repos -> Repositories.  3. Select the repository you want to enable Advanced Security for.  4. Turn 'On' the setting 'Advanced Security'.,ADO_PROJECT_REPOSITORY_ADVANCEDSECURITY_ENABLE_FOR_REPO
Repository,ADO Secure Repositories - General,Secure your repositories by validating the settings and applying best practices.,High,DOS1330,Enable Advanced Security - Secret Scanning - Block secrets on push,Block secrets on push. Enable secret push protection for your repository. Scan all pushes to the repository and block pushes containing secrets. Secret scanning push protection and repository scanning are automatically enabled when you turn on Advanced Security. Learn more: https://learn.microsoft.com/en-us/azure/devops/repos/security/configure-github-advanced-security-features,1. Go to Project Settings.  2. Select Repos -> Repositories.  3. Select the repository you want to enable Advanced Security for.  4. Ensure the setting 'Advanced Security' is 'On'.  5. Enable the check 'Block secrets on push'.,ADO_PROJECT_REPOSITORY_ADVANCEDSECURITY_ENABLE_SECRET_SCANNING_PUSH_PROTECTION
Repository,ADO Secure Repositories - General,Secure your repositories by validating the settings and applying best practices.,High,DOS3110,Repository Policies - Commit author email validation,"Enable the 'Commit author email validation' branch policy, so that you block commits to a repository by commit authors whose email addresses don't match a pattern. This policy will block pushes from including commits where the author email does not match the specified patterns. Learn more: https://learn.microsoft.com/en-us/azure/devops/repos/git/repository-settings?#commit-author-email-validation-policy https://learn.microsoft.com/en-us/azure/devops/organizations/security/security-best-practices#repositories-and-branches","1. Navigate to Project Settings.  2. Open the Repositories link under Repos.  3. Select a repository from the list.  4. Click on Policies tab.  5. Under 'Repository Policies' section, turn 'On' the policy 'Commit author email validation' and configure the author email patterns.",ADO_PROJECT_REPOSITORY_REPOPOLICY_COMMIT_AUTHOR_EMAIL_VALIDATION
Repository,ADO Secure Repositories - General,Secure your repositories by validating the settings and applying best practices.,High,DOS3120,Repository Policies - Disable Forks,"Disable the 'Forks' repository policy setting, so that you block users to create forks from this repository. The more forks there are, the harder it is to keep track of each fork’s security. Learn more: https://learn.microsoft.com/en-us/azure/devops/organizations/security/security-best-practices#repositories-and-branches https://learn.microsoft.com/en-us/azure/devops/repos/git/repository-settings#enable-forks","1. Navigate to Project Settings.  2. Open the Repositories link under Repos.  3. Select a repository from the list.  4. Click on Settings tab.  5. Under 'Repository Settings' section, turn 'Off' the setting 'Forks'.",ADO_PROJECT_REPOSITORY_REPOPOLICY_DISABLE_FORKS
Repository,ADO Secure Repositories - General,Secure your repositories by validating the settings and applying best practices.,High,DOS3090,Repository Policies - Protect repository with required policies,"Enable required repository policies, so that you enfore default settings and options. This policy will ensure that best practice policies are required on each repository: Commit author email validation, Reserved names, Maximum path length, Maximum file size, and Git repository settings. Learn more: https://learn.microsoft.com/en-us/azure/devops/repos/git/repository-settings?#repository-policies-or-options https://learn.microsoft.com/en-us/azure/devops/organizations/security/security-best-practices#repositories-and-branches","1. Navigate to Project Settings.  2. Open the Repositories link under Repos.  3. Select a repository from the list.  4. Click on Policies tab.  5. Under 'Repository Policies' section, ensure the required policies are turned on.",ADO_PROJECT_REPOSITORY_REPOPOLICIES_PROTECT_REPOSITORY_WITH_REQUIRED_POLICIES
Repository,ADO Secure Repositories - General,Secure your repositories by validating the settings and applying best practices.,Medium,DOS3080,Default branch name should be main,The default branch name for all repositories should be 'main'. This policy will ensure naming convention is consistent across each repository. You can change the default branch for a particular repository at any time. Learn more: https://learn.microsoft.com/en-us/azure/devops/repos/git/repository-settings#default-branch-name https://learn.microsoft.com/en-us/azure/devops/repos/git/change-default-branch,"1. Navigate to Project Settings.  2. Open the Repositories link under Repos.  3. Click on Settings tab.  4. Under 'All Repositories Settings' section, ensure the setting 'Default branch name for new repositories' is 'main'.  5. Navigate to Project -> Repos -> Branches  6. Select a repository from top drop down list.  7. Ensure the 'Default' and 'Compare' labels are for the 'main' branch.",ADO_PROJECT_REPOSITORY_DEFAULTBRANCH_MAIN
Repository,ADO Secure Repositories - General,Secure your repositories by validating the settings and applying best practices.,Medium,DOS3100,Repository Policies - Case enforcement,"Enable the 'Case enforcement' repository policy setting, so that you block contributors from introducing case-only differences. Avoid case-sensitivity conflicts by blocking pushes that change name casing on files, folders, branches, and tags. Learn more: https://learn.microsoft.com/en-us/azure/devops/repos/git/repository-settings?#case-enforcement-policy https://learn.microsoft.com/en-us/azure/devops/repos/git/os-compatibility https://learn.microsoft.com/en-us/azure/devops/organizations/security/security-best-practices#repositories-and-branches","1. Navigate to Project Settings.  2. Open the Repositories link under Repos.  3. Select a repository from the list.  4. Click on Policies tab.  5. Under 'Repository Policies' section, turn 'On' the policy 'Case enforcement'.",ADO_PROJECT_REPOSITORY_REPOPOLICY_CASE_ENFORCEMENT
Repository,ADO Secure Repositories - General,Secure your repositories by validating the settings and applying best practices.,Medium,DOS3130,Repository Policies - Maximum file size (10 MB),"Enable the 'Maximum file size' repository policy setting, so that you block files over a certain size from entering the repository. This policy will reject pushes to a repository for files which exceed the specified size. Block pushes that contain new or updated files larger than this limit. Learn more: https://learn.microsoft.com/en-us/azure/devops/repos/git/repository-settings?#maximum-file-size-policy https://learn.microsoft.com/en-us/azure/devops/organizations/security/security-best-practices#repositories-and-branches","1. Navigate to Project Settings.  2. Open the Repositories link under Repos.  3. Select a repository from the list.  4. Click on Policies tab.  5. Under 'Repository Policies' section, turn 'On' the policy 'Maximum file size' and select the (10 MB) value from the drop down list.",ADO_PROJECT_REPOSITORY_REPOPOLICY_MAXIMUM_FILE_SIZE
Repository,ADO Secure Repositories - General,Secure your repositories by validating the settings and applying best practices.,Medium,DOS3140,Repository Policies - Maximum path length (248),"Enable the 'Maximum path length' repository policy setting, so that you block pushes that contain files or directories with path lengths that are invalid on any platform. This policy will reject pushes to a repository for paths which exceed the specified length. Block pushes that introduce paths that exceed the specified length. The default maximum value is 248, because that maximum length is 100% supported across all three major platforms. Learn more: https://learn.microsoft.com/en-us/azure/devops/repos/git/repository-settings?#maximum-path-length-policy https://learn.microsoft.com/en-us/azure/devops/organizations/security/security-best-practices#repositories-and-branches","1. Navigate to Project Settings.  2. Open the Repositories link under Repos.  3. Select a repository from the list.  4. Click on Policies tab.  5. Under 'Repository Policies' section, turn 'On' the policy 'Maximum path length' and configure the length to be 248 chars supported across all three major platforms.",ADO_PROJECT_REPOSITORY_REPOPOLICY_MAXIMUM_PATH_LENGTH
Repository,ADO Secure Repositories - General,Secure your repositories by validating the settings and applying best practices.,Medium,DOS3150,Repository Policies - Reserved names,"Enable the 'Reserved names' repository policy setting, so that you block pushes to a repository that contain file or folder names that are invalid on all platforms. This policy will reject pushes to a repository for names which aren't valid on all supported client OSes. Block pushes that introduce files, folders, or branch names that include platform reserved names or incompatible characters. Learn more: https://learn.microsoft.com/en-us/azure/devops/repos/git/repository-settings?#reserved-names-policy https://learn.microsoft.com/en-us/azure/devops/organizations/security/security-best-practices#repositories-and-branches","1. Navigate to Project Settings.  2. Open the Repositories link under Repos.  3. Select a repository from the list.  4. Click on Policies tab.  5. Under 'Repository Policies' section, turn 'On' the policy 'Reserved names'.",ADO_PROJECT_REPOSITORY_REPOPOLICY_RESERVED_NAMES
AppSec,ADO Secure Repositories - DevSecOps Controls,"Secure your repositories by validating and monitoring the implementation of all DevSecOps controls: DevOps Scanning (DOS), Secret Scanning (SS), Software Composition Analysis (SCA), Static Application Security Testing (SAST), Container Image Scanning (CIS), IaC Scanning (IACS), Infrastructure Scanning (IS), Dynamic Application Security Testing (DAST), Interactive Application Security Testing (IAST), Continuous Scanning Tools (CST), DevOps Compliance Check (DOCC)",Critical,DOS3540,DevSecOps Control - Ensure Container Image Scanning (CIS) / Container Scanning,"Make sure that Container Image Scanning (CIS) / Image Scanning is in place for your repository. Container image scanning is a crucial aspect of DevSecOps, especially as containers become more prevalent in application deployment. Container scanning is the process and scanning tools used to identify vulnerabilities within containers and their components. It is key to container security, and enables developers and cybersecurity teams to fix security threats in containerized applications before deployment. Container scanning tools, scan containers and compare them against public or proprietary vulnerability databases to uncover potential security issues. Learn more: https://owasp.org/www-project-devsecops-guideline/latest/02f-Container-Vulnerability-Scanning https://www.practical-devsecops.com/top-container-security-tools/ https://www.aquasec.com/cloud-native-academy/container-security/image-scanning/ https://snyk.io/learn/container-security/container-scanning",1. Navigate to Project -> Pipelines.  2. Open your repository CI Pipeline.  3. Ensure a Container Image Scanning (CIS) tool is present in your pipeline.,ADO_REPOSITORY_DEVSECOPS_CONTROL_CIS_CONTAINER_IMAGE_SCANNING
AppSec,ADO Secure Repositories - DevSecOps Controls,"Secure your repositories by validating and monitoring the implementation of all DevSecOps controls: DevOps Scanning (DOS), Secret Scanning (SS), Software Composition Analysis (SCA), Static Application Security Testing (SAST), Container Image Scanning (CIS), IaC Scanning (IACS), Infrastructure Scanning (IS), Dynamic Application Security Testing (DAST), Interactive Application Security Testing (IAST), Continuous Scanning Tools (CST), DevOps Compliance Check (DOCC)",Critical,DOS3570,DevSecOps Control - Ensure Dynamic Application Security Testing (DAST),"Make sure that Dynamic Application Security Testing (DAST) is in place for your repository. Dynamic application security testing emulates the methods a bad actor might use to attack an application. This testing occurs while the application is running and is based on predefined use cases. Web Application Vulnerability Scanners are automated tools that scan web applications, normally from the outside, to look for security vulnerabilities such as Cross-site scripting, SQL Injection, Command Injection, Path Traversal and insecure server configuration. DAST is a black-box testing method that scans applications in runtime. DAST is a good method for preventing regressions and does not depend on a specific programming language. Learn more: https://owasp.org/www-community/Vulnerability_Scanning_Tools https://owasp.org/www-community/Free_for_Open_Source_Application_Security_Tools https://appsecmap.com https://snyk.io/learn/application-security/dast-dynamic-application-security-testing/",1. Navigate to Project -> Pipelines.  2. Open your repository CD Pipeline.  3. Ensure a DAST scanning tool is present in your pipeline.,ADO_REPOSITORY_DEVSECOPS_CONTROL_DAST_DYNAMIC_APPLICATION_SECURITY_TESTING
AppSec,ADO Secure Repositories - DevSecOps Controls,"Secure your repositories by validating and monitoring the implementation of all DevSecOps controls: DevOps Scanning (DOS), Secret Scanning (SS), Software Composition Analysis (SCA), Static Application Security Testing (SAST), Container Image Scanning (CIS), IaC Scanning (IACS), Infrastructure Scanning (IS), Dynamic Application Security Testing (DAST), Interactive Application Security Testing (IAST), Continuous Scanning Tools (CST), DevOps Compliance Check (DOCC)",Critical,DOS3550,DevSecOps Control - Ensure Infrastructure as Code Scanning (IACS),"Make sure that Infrastructure as Code (IaC) Scanning (IACS) is in place for your repository. Infrastructure as code (IaC) scanning is the process of analyzing and evaluating the security and compliance of infrastructure code. To reduce the risk that misconfigurations are deployed to the production environment, IaC scanning tools automatically check the infrastructure at the code level for noncompliance with security policies and standards. Learn more: https://appsecmap.com  https://learn.microsoft.com/en-us/azure/defender-for-cloud/iac-vulnerabilities https://owasp.org/www-project-devsecops-guideline/latest/ https://www.aquasec.com/cloud-native-academy/devsecops/infrastructure-as-code-iac/ https://www.microsoft.com/en-us/security/business/security-101/what-is-devsecops https://github.com/aquasecurity/tfsec https://github.com/tenable/terrascan https://github.com/bridgecrewio/checkov",1. Navigate to Project -> Pipelines.  2. Open your repository CI Pipeline.  3. Ensure a IAC Scanning tool is present in your pipeline.,ADO_REPOSITORY_DEVSECOPS_CONTROL_IACS_IAC_SCANNING
AppSec,ADO Secure Repositories - DevSecOps Controls,"Secure your repositories by validating and monitoring the implementation of all DevSecOps controls: DevOps Scanning (DOS), Secret Scanning (SS), Software Composition Analysis (SCA), Static Application Security Testing (SAST), Container Image Scanning (CIS), IaC Scanning (IACS), Infrastructure Scanning (IS), Dynamic Application Security Testing (DAST), Interactive Application Security Testing (IAST), Continuous Scanning Tools (CST), DevOps Compliance Check (DOCC)",Critical,DOS3560,DevSecOps Control - Ensure Infrastructure Scanning (IS),"Make sure that Infrastructure Scanning (IS) is in place for your repository. DevOps does a great job in automating the development and deployment process, but since all moving parts (containers, libraries etc.) are being updated frequently, it is imperative to make sure the infrastructure where you deploy your code is safe. The best way to do that is to incorporate vulnerability scanning into your pipeline. A vulnerability scanner is a computer program designed to assess computers, networks or applications for known weaknesses. These scanners are used to discover the weaknesses of a given system. They are utilized in the identification and detection of vulnerabilities arising from mis-configurations or flawed programming within a network-based asset such as a firewall, router, web server, application server, etc. Learn more: https://owasp.org/www-project-devsecops-guideline/latest/02e-Infrastructure-Vulnerability-Scanning https://www.gartner.com/reviews/market/vulnerability-assessment",1. Navigate to Project -> Pipelines.  2. Open your repository CI/CD Pipeline.  3. Ensure an Infrastructure Scanning tool is present in your pipeline.,ADO_REPOSITORY_DEVSECOPS_CONTROL_IS_INFRASTRUCTURE_SCANNING
AppSec,ADO Secure Repositories - DevSecOps Controls,"Secure your repositories by validating and monitoring the implementation of all DevSecOps controls: DevOps Scanning (DOS), Secret Scanning (SS), Software Composition Analysis (SCA), Static Application Security Testing (SAST), Container Image Scanning (CIS), IaC Scanning (IACS), Infrastructure Scanning (IS), Dynamic Application Security Testing (DAST), Interactive Application Security Testing (IAST), Continuous Scanning Tools (CST), DevOps Compliance Check (DOCC)",Critical,DOS3510,DevSecOps Control - Ensure Secret Scanning (SS),"Make sure that Secret Scanning (SS) is in place for your repository. Exposed credentials provide easily exploitable opportunities for attackers. To defend against this threat, secret scanning tools scan for credentials in your source code. Learn more: https://learn.microsoft.com/en-us/azure/devops/repos/security/github-advanced-security-secret-scanning https://github.com/gitleaks/gitleaks  https://appsecmap.com https://owasp.org/www-project-devsecops-guideline/latest/01a-Secrets-Management","1. Navigate to Project -> Pipelines.  2. Open your repository CI Pipeline.  3. Ensure a secret scanning tool is present in your pipeline.  4.Or alternatively, you can enable 'Advanced Security' for your repository.",ADO_REPOSITORY_DEVSECOPS_CONTROL_SS_SECRET_SCANNING
AppSec,ADO Secure Repositories - DevSecOps Controls,"Secure your repositories by validating and monitoring the implementation of all DevSecOps controls: DevOps Scanning (DOS), Secret Scanning (SS), Software Composition Analysis (SCA), Static Application Security Testing (SAST), Container Image Scanning (CIS), IaC Scanning (IACS), Infrastructure Scanning (IS), Dynamic Application Security Testing (DAST), Interactive Application Security Testing (IAST), Continuous Scanning Tools (CST), DevOps Compliance Check (DOCC)",Critical,DOS3520,DevSecOps Control - Ensure Software Composition Analysis (SCA) / Dependency Scanning,"Make sure that Software Composition Analysis (SCA) / Dependency Scanning is in place for your repository. Scan your application for any vulnerabilities in open source components used in your source code. Dependency scanning detects the open source components used in your source code and detects if there are any associated vulnerabilities. Any found vulnerabilities from open source components get flagged as an alert. Dependency scanning generates an alert for any open-source component, direct or transitive, found to be vulnerable that your code depends upon. Direct vulnerabilities are the libraries your code directly uses. Transitive dependencies are the libraries or other software that direct dependencies use. Learn more: https://learn.microsoft.com/en-us/azure/devops/repos/security/github-advanced-security-dependency-scanning https://appsecmap.com https://www.gartner.com/reviews/market/software-composition-analysis-sca",1. Navigate to Project -> Pipelines.  2. Open your repository CI Pipeline.  3. Ensure a SCA / Dependency scanning tool for dependencies is present in your pipeline.,ADO_REPOSITORY_DEVSECOPS_CONTROL_SCA_SOFTWARE_COMPOSITION_ANALYSIS
AppSec,ADO Secure Repositories - DevSecOps Controls,"Secure your repositories by validating and monitoring the implementation of all DevSecOps controls: DevOps Scanning (DOS), Secret Scanning (SS), Software Composition Analysis (SCA), Static Application Security Testing (SAST), Container Image Scanning (CIS), IaC Scanning (IACS), Infrastructure Scanning (IS), Dynamic Application Security Testing (DAST), Interactive Application Security Testing (IAST), Continuous Scanning Tools (CST), DevOps Compliance Check (DOCC)",Critical,DOS3530,DevSecOps Control - Ensure Static Application Security Testing (SAST) / Code Scanning,"Make sure that Static Application Security Testing (SAST) / Code Scanning is in place for your repository. Code scanning lets you analyze the code to find security vulnerabilities and coding errors. SAST tools play a crucial role in identifying security vulnerabilities within source code. These tools analyze code for potential flaws based on predefined security rules and policies. Before their code is compiled, DevSecOps developers begin testing their custom code for security vulnerabilities. This helps them fix issues without affecting the build. SAST tools make this process easier with automatic checks and real-time feedback. Learn more: https://learn.microsoft.com/en-us/azure/devops/repos/security/github-advanced-security-code-scanning https://appsecmap.com https://owasp.org/www-community/Source_Code_Analysis_Tools https://www.microsoft.com/en-us/security/business/security-101/what-is-devsecops",1. Navigate to Project -> Pipelines.  2. Open your repository CI Pipeline.  3. Ensure a SAST / Code scanning tool is present in your pipeline.,ADO_REPOSITORY_DEVSECOPS_CONTROL_SAST_STATIC_APPLICATION_SECURITY_TESTING
AppSec,ADO Secure Repositories - DevSecOps Controls,"Secure your repositories by validating and monitoring the implementation of all DevSecOps controls: DevOps Scanning (DOS), Secret Scanning (SS), Software Composition Analysis (SCA), Static Application Security Testing (SAST), Container Image Scanning (CIS), IaC Scanning (IACS), Infrastructure Scanning (IS), Dynamic Application Security Testing (DAST), Interactive Application Security Testing (IAST), Continuous Scanning Tools (CST), DevOps Compliance Check (DOCC)",High,DOS3580,DevSecOps Control - Ensure Interactive Application Security Testing (IAST),"Make sure that Interactive Application Security Testing (IAST) is in place for your repository. During quality assurance testing or when an application is being used, interactive application security tools scan the code to find vulnerabilities and provide reports that identify where in the code the issue is. IAST tools are typically geared to analyze Web Applications and Web APIs, but that is vendor specific. There may be IAST products that can perform good security analysis on non-web applications as well. IAST works best when deployed in a QA environment with automated functional tests running. Learn more: https://owasp.org/www-community/Free_for_Open_Source_Application_Security_Tools https://appsecmap.com https://snyk.io/learn/application-security/iast-interactive-application-security-testing/ https://www.veracode.com/security/interactive-application-security-testing-iast https://owasp.org/www-project-devsecops-guideline/latest/02c-Interactive-Application-Security-Testing",1. Navigate to Project -> Pipelines.  2. Open your repository CD Pipeline.  3. Ensure a IAST scanning tool is present in your pipeline.,ADO_REPOSITORY_DEVSECOPS_CONTROL_IAST_INTERACTIVE_APPLICATION_SECURITY_TESTING
